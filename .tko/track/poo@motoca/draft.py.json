{
    "patches": [
        {
            "label": "2025-10-25_17-16-04",
            "content": "@@ -1,1039 +0,0 @@\n-class Person:%0A    def __init__(self, name: str, age: int):%0A        self.__name = name%0A        self.__age = age%0A%0A    def getName(self):%0A        return self.__name%0A%0A    def getAge(self):%0A        return self.__age%0A%0A    def __str__(self):%0A        return f%22%7Bself.__name%7D:%7Bself.__age%7D%22%0A%0Aclass Motorcycle:%0A    def __init__(self, power: int = 1):%0A        self.power = power%0A        self.time = 0%0A        self.person = None%0A%0A    def enter(self, person: Person):%0A        if self.person is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return%0A        self.person = person%0A%0A    def leave(self):%0A        if self.person is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A        print(self.person)%0A        self.person = None%0A%0A    def buy(self, time: int):%0A        self.time += time%0A%0A    def drive(self, time: int):%0A        if self.time == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A        if self.person is None:%0A            print(%22fsil: empty motorcycle%22)%0A            return%0A        if self\n",
            "lines": "0"
        },
        {
            "label": "2025-10-25_18-10-40",
            "content": "@@ -1036,539 +1036,4 @@\n self\n-.person.getAge() %3E 10:%0A            return%0A            print(%22fail: too old to drive%22)%0A            return%0A        if time %3E self.time: %0A            print(f%22fail: time finished after %7Bself.time%7D minutes%22)%0A            self.time = 0%0A        else:%0A            self.time -= time%0A%0A        def honk(self):%0A            print(%22P%22 + %22e%22 * self.power + %22m%22)%0A%0A        def __str__(self):%0A            person_str = %22(empty)%22 if self.person is None else f%22(%7Bself.person%7D)%22%0A            return f%22power:%7Bself.power%7D, time:%7Bself.time%7D, person:%7Bperson_str%7D%22\n",
            "lines": "44"
        },
        {
            "label": "2025-10-25_18-27-25",
            "content": "@@ -1571,922 +1571,4 @@\n tr%7D%22\n-%0A%0Adef main():%0A    moto = Motorcycle()%0A    while True:%0A        try:%0A            line = input().strip()%0A            if not line:%0A                continue%0A            print(f%22$%7Bline%7D%22)%0A            parts = line.split()%0A            cmd = parts%5B0%5D%0A%0A            if cmd == %22end%22:%0A                break%0A            elif cmd == %22init%22:%0A                                moto = Motorcycle(int(parts%5B1%5D) if len(parts) %3E 1 else 1)%0A            elif cmd == %22show%22:%0A                print(moto)%0A            elif cmd == %22enter%22:%0A                moto.enter(Person(parts%5B1%5D, int(parts%5B2%5D)))%0A            elif cmd == %22leave%22:%0A                moto.leave()%0A            elif cmd == %22buy%22:%0A                moto.buy(int(parts%5B1%5D))%0A            elif cmd == %22drive%22:%0A                moto.drive(int(parts%5B1%5D))%0A            elif cmd == %22honk%22:%0A                moto.honk()%0A        except EOFError:%0A            break%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "59"
        },
        {
            "label": "2025-10-25_19-17-32",
            "content": "@@ -5,12 +5,12 @@\n s Pe\n-ssoa\n+rson\n :%0A  \n@@ -284,16 +284,22 @@\n ass Moto\n+rcycle\n :%0A    de\n",
            "lines": "92"
        },
        {
            "label": "2025-10-25_19-20-05",
            "content": "@@ -31,17 +31,17 @@\n (self, n\n-o\n+a\n me: str,\n@@ -41,20 +41,18 @@\n e: str, \n-idad\n+ag\n e: int):\n@@ -72,16 +72,16 @@\n .__n\n-o\n+a\n me = n\n-o\n+a\n me%0A \n@@ -98,20 +98,16 @@\n f.__\n-idade = idad\n+age = ag\n e%0A%0A \n@@ -151,17 +151,17 @@\n self.__n\n-o\n+a\n me%0A%0A    \n@@ -200,20 +200,18 @@\n  self.__\n-idad\n+ag\n e%0A%0A    d\n@@ -254,17 +254,17 @@\n self.__n\n-o\n+a\n me%7D:%7Bsel\n@@ -271,18 +271,15 @@\n f.__\n-idad\n+ag\n e%7D%22%0A%0A\n-%0A\n clas\n@@ -311,22 +311,19 @@\n self, po\n-tencia\n+wer\n : int = \n@@ -345,25 +345,19 @@\n f.po\n-tencia = potencia\n+wer = power\n %0A   \n@@ -359,36 +359,35 @@\n r%0A        self.t\n-empo\n+ime\n  = 0%0A        sel\n@@ -382,36 +382,36 @@\n %0A        self.pe\n-ssoa\n+rson\n  = None%0A%0A    def\n@@ -429,20 +429,20 @@\n , pe\n-ssoa\n+rson\n : Pe\n-ssoa\n+rson\n ):%0A \n@@ -454,28 +454,28 @@\n   if self.pe\n-ssoa\n+rson\n  is not None\n@@ -557,21 +557,21 @@\n f.pe\n-ssoa\n+rson\n  = pe\n-ssoa\n+rson\n %0A%0A  \n@@ -599,36 +599,36 @@\n       if self.pe\n-ssoa\n+rson\n  is None:%0A      \n@@ -705,20 +705,20 @@\n (self.pe\n-ssoa\n+rson\n )%0A      \n@@ -726,20 +726,20 @@\n  self.pe\n-ssoa\n+rson\n  = None%0A\n@@ -750,36 +750,35 @@\n  def buy(self, t\n-empo\n+ime\n : int):%0A        \n@@ -787,21 +787,19 @@\n lf.t\n-empo\n+ime\n  += t\n-empo\n+ime\n %0A%0A  \n@@ -817,20 +817,19 @@\n (self, t\n-empo\n+ime\n : int):%0A\n@@ -845,20 +845,19 @@\n f self.t\n-empo\n+ime\n  == 0:%0A \n@@ -926,36 +926,36 @@\n       if self.pe\n-ssoa\n+rson\n  is None:%0A      \n@@ -960,33 +960,33 @@\n         print(%22f\n-a\n+s\n il: empty motorc\n@@ -1029,20 +1029,20 @@\n  self.pe\n-ssoa\n+rson\n .getAge(\n@@ -1049,16 +1049,35 @@\n ) %3E 10:%0A\n+            return%0A\n         \n@@ -1143,20 +1143,19 @@\n     if t\n-empo\n+ime\n  %3E self.\n@@ -1159,13 +1159,13 @@\n lf.t\n-empo:\n+ime: \n %0A   \n@@ -1214,20 +1214,19 @@\n  %7Bself.t\n-empo\n+ime\n %7D minute\n@@ -1247,20 +1247,19 @@\n   self.t\n-empo\n+ime\n  = 0%0A   \n@@ -1291,27 +1291,29 @@\n lf.t\n-empo\n+ime\n  -= t\n-empo%0A%0A\n+ime%0A%0A  \n     \n+  \n def \n@@ -1316,32 +1316,36 @@\n def honk(self):%0A\n+    \n         print(%22P\n@@ -1361,22 +1361,19 @@\n  self.po\n-tencia\n+wer\n  + %22m%22)%0A\n@@ -1373,24 +1373,28 @@\n + %22m%22)%0A%0A    \n+    \n def __str__(\n@@ -1408,22 +1408,26 @@\n         \n+    \n pe\n-ssoa\n+rson\n _str = %22\n@@ -1445,20 +1445,20 @@\n  self.pe\n-ssoa\n+rson\n  is None\n@@ -1478,16 +1478,20 @@\n f.pe\n-ssoa\n+rson\n %7D)%22%0A\n+    \n     \n@@ -1521,14 +1521,11 @@\n f.po\n-tencia\n+wer\n %7D, t\n@@ -1539,12 +1539,11 @@\n lf.t\n-empo\n+ime\n %7D, p\n@@ -1555,20 +1555,20 @@\n :%7Bpe\n-ssoa\n+rson\n _str%7D%22%0A%0A\n %0Adef\n@@ -1563,17 +1563,16 @@\n _str%7D%22%0A%0A\n-%0A\n def main\n@@ -1590,16 +1590,22 @@\n o = Moto\n+rcycle\n ()%0A    w\n@@ -1887,16 +1887,32 @@\n %22init%22:%0A\n+                \n         \n@@ -1930,16 +1930,22 @@\n o = Moto\n+rcycle\n (int(par\n@@ -2099,20 +2099,20 @@\n enter(Pe\n-ssoa\n+rson\n (parts%5B1\n@@ -2442,17 +2442,16 @@\n  break%0A%0A\n-%0A\n if __nam\n",
            "lines": "92"
        },
        {
            "label": "2025-10-25_19-20-37",
            "content": "class Pessoa:\n    def __init__(self, nome: str, idade: int):\n        self.__nome = nome\n        self.__idade = idade\n\n    def getName(self):\n        return self.__nome\n\n    def getAge(self):\n        return self.__idade\n\n    def __str__(self):\n        return f\"{self.__nome}:{self.__idade}\"\n\n\nclass Moto:\n    def __init__(self, potencia: int = 1):\n        self.potencia = potencia\n        self.tempo = 0\n        self.pessoa = None\n\n    def enter(self, pessoa: Pessoa):\n        if self.pessoa is not None:\n            print(\"fail: busy motorcycle\")\n            return\n        self.pessoa = pessoa\n\n    def leave(self):\n        if self.pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return\n        print(self.pessoa)\n        self.pessoa = None\n\n    def buy(self, tempo: int):\n        self.tempo += tempo\n\n    def drive(self, tempo: int):\n        if self.tempo == 0:\n            print(\"fail: buy time first\")\n            return\n        if self.pessoa is None:\n            print(\"fail: empty motorcycle\")\n            return\n        if self.pessoa.getAge() > 10:\n            print(\"fail: too old to drive\")\n            return\n        if tempo > self.tempo:\n            print(f\"fail: time finished after {self.tempo} minutes\")\n            self.tempo = 0\n        else:\n            self.tempo -= tempo\n\n    def honk(self):\n        print(\"P\" + \"e\" * self.potencia + \"m\")\n\n    def __str__(self):\n        pessoa_str = \"(empty)\" if self.pessoa is None else f\"({self.pessoa})\"\n        return f\"power:{self.potencia}, time:{self.tempo}, person:{pessoa_str}\"\n\n\ndef main():\n    moto = Moto()\n    while True:\n        try:\n            line = input().strip()\n            if not line:\n                continue\n            print(f\"${line}\")\n            parts = line.split()\n            cmd = parts[0]\n\n            if cmd == \"end\":\n                break\n            elif cmd == \"init\":\n                moto = Moto(int(parts[1]) if len(parts) > 1 else 1)\n            elif cmd == \"show\":\n                print(moto)\n            elif cmd == \"enter\":\n                moto.enter(Pessoa(parts[1], int(parts[2])))\n            elif cmd == \"leave\":\n                moto.leave()\n            elif cmd == \"buy\":\n                moto.buy(int(parts[1]))\n            elif cmd == \"drive\":\n                moto.drive(int(parts[1]))\n            elif cmd == \"honk\":\n                moto.honk()\n        except EOFError:\n            break\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "94"
        }
    ]
}