{
    "patches": [
        {
            "label": "2025-10-28_18-33-44",
            "content": "@@ -142,31 +142,24 @@\n _carga(self)\n- -%3E int\n :%0A        re\n@@ -201,31 +201,24 @@\n cidade(self)\n- -%3E int\n :%0A        re\n@@ -241,34 +241,41 @@\n cidade%0A%0A    def \n-us\n+descarreg\n ar(self, tempo: \n@@ -292,178 +292,39 @@\n     \n-%22%22%22Diminui a carga da bateria, retorna quanto tempo foi poss%C3%ADvel usar.%22%22%22%0A        if self.__carga == 0:%0A            return 0%0A        tempo_usado = min(tempo, self.__carga\n+gasto = min(self.__carga, tempo\n )%0A  \n@@ -345,26 +345,20 @@\n arga -= \n-tempo_usad\n+gast\n o%0A      \n@@ -370,18 +370,12 @@\n urn \n-tempo_usad\n+gast\n o%0A%0A \n@@ -421,116 +421,109 @@\n     \n-%22%22%22Aumenta a carga da bateria sem ultrapassar a capacidade.%22%22%22%0A        self.__carga = min(self.__capacidade,\n+self.__carga = min(self.__capacidade, self.__carga + tempo)%0A%0A    def esta_vazia(self):%0A        return\n  sel\n@@ -532,27 +532,22 @@\n __carga \n-+ tempo)\n+== 0\n %0A%0A\n- \n     def \n@@ -577,24 +577,17 @@\n print(f%22\n-Bateria \n+(\n %7Bself.__\n@@ -616,13 +616,13 @@\n ade%7D\n+)\n %22)%0A%0A\n-%0A\n     \n@@ -820,15 +820,8 @@\n elf)\n- -%3E int\n :%0A  \n@@ -862,237 +862,49 @@\n def \n-carreg\n+mostr\n ar(self\n-, bateria: Bateria, tempo: int):%0A        %22%22%22Carrega a bateria por um tempo.%22%22%22%0A        if bateria is not None:%0A            bateria.carregar(self.__pote\n+):%0A        print(f%22(Pot%C3%AA\n ncia \n-* tempo)%0A%0A    def mostrar(self):%0A        print(f%22Carregador \n %7Bsel\n@@ -916,17 +916,17 @@\n otencia%7D\n-W\n+)\n %22)%0A%0A    \n@@ -961,16 +961,26 @@\n eturn f%22\n+(Pot%C3%AAncia \n %7Bself.__\n@@ -992,9 +992,9 @@\n cia%7D\n-W\n+)\n %22%0A%0A%0A\n@@ -1082,60 +1082,15 @@\n f.__\n-tempo_uso = 0%0A        self.__bateria: Bateria %7C None\n+bateria\n  = N\n@@ -1122,27 +1122,8 @@\n ador\n-: Carregador %7C None\n  = N\n",
            "lines": "125"
        },
        {
            "label": "2025-10-28_18-42-51",
            "content": "@@ -1,28 +1,43 @@\n+class Bateria:%0A\n     def __init__(self, capac\n@@ -703,32 +703,33 @@\n a + tempo)%0A%0A    \n+ \n def mostrar(self\n@@ -789,24 +789,25 @@\n acidade%7D%22)%0A%0A\n+%0A\n     def __st\n@@ -826,32 +826,33 @@\n        return f%22\n+(\n %7Bself.__carga%7D/%7B\n@@ -869,16 +869,17 @@\n acidade%7D\n+)\n %22%0A%0A%0Aclas\n@@ -1561,330 +1561,214 @@\n     \n-# ---------- M%C3%A9todos \n de\n+f\n  s\n-tatus ----------%0A    def mostrar(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        msg = f%22Notebook: %7Bstatus%7D%22%0A        if self.__ligado:%0A            msg += f%22 por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D%22\n+etBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22bateria removida%22)%0A            b = self.__bateria\n %0A   \n@@ -1764,34 +1764,35 @@\n bateria%0A        \n-if\n+   \n  self.__bateria:\n@@ -1782,33 +1782,39 @@\n   self.__bateria\n-:\n+ = None\n %0A            msg\n@@ -1814,209 +1814,301 @@\n     \n-msg += f%22, Bateria %7Bself.__bateria%7D%22%0A        print(msg)%0A%0A    # ---------- M%C3%A9todos de liga%C3%A7%C3%A3o ----------%0A    def ligar(self):%0A        if self.__ligado:%0A            return%0A        if self.__carregador or\n+return b%0A        print(%22fail: sem bateria para remover%22)%0A        return None%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A%0A    def ligar(self):%0A        if self.__ligado:%0A            print(%22notebook j%C3%A1 est%C3%A1 ligado%22)%0A            return%0A%0A        if\n  (se\n@@ -2120,24 +2120,28 @@\n bateria and \n+not \n self.__bater\n@@ -2147,24 +2147,42 @@\n ria.\n-get_carga() %3E 0)\n+esta_vazia()) or self.__carregador\n :%0A  \n@@ -2223,33 +2223,33 @@\n          print(%22\n-N\n+n\n otebook ligado%22)\n@@ -2282,22 +2282,16 @@\n  print(%22\n-fail: \n n%C3%A3o foi \n@@ -2403,33 +2403,33 @@\n          print(%22\n-N\n+n\n otebook desligad\n@@ -2436,51 +2436,70 @@\n o%22)%0A\n-%0A    # ---------- M%C3%A9todos de uso ----------\n+        else:%0A            print(%22notebook j%C3%A1 est%C3%A1 desligado%22)%0A\n %0A   \n@@ -2572,29 +2572,32 @@\n      print(%22\n-fail:\n+notebook\n  desligado%22)\n@@ -2629,53 +2629,157 @@\n     \n-# Se tiver apenas carregador, s%C3%B3 soma o tempo\n+if self.__bateria is None and self.__carregador is None:%0A            print(%22fail: sem energia%22)%0A            self.__ligado = False%0A            return%0A\n %0A   \n@@ -2793,26 +2793,23 @@\n  self.__\n-carregador\n+bateria\n  and not\n@@ -2815,32 +2815,45 @@\n t self.__bateria\n+.esta_vazia()\n :%0A            se\n@@ -2854,106 +2854,138 @@\n     \n-self.__tempo_uso += tempo%0A            print(%22Notebook utilizado com sucesso%22)%0A            return%0A%0A\n+# usa bateria%0A            descarregado = self.__bateria.descarregar(tempo)%0A            tempo_restante = tempo - descarregado%0A%0A    \n     \n@@ -2990,25 +2990,25 @@\n       # \n-S\n+s\n e tiver \n apenas b\n@@ -3003,56 +3003,60 @@\n ver \n-apenas bateria%0A        if self.__bateria and not\n+carregador, ele carrega durante o uso%0A            if\n  sel\n@@ -3083,23 +3083,19 @@\n         \n-usado =\n+   \n  self.__\n@@ -3106,116 +3106,171 @@\n ria.\n-usar(tempo)%0A            self.__tempo_uso += usado%0A            if usado %3C tempo:%0A                print(%22fail:\n+carregar(self.__carregador.get_potencia() * tempo)%0A%0A            if self.__bateria.esta_vazia():%0A                print(f%22Usando por %7Bdescarregado%7D minutos, notebook\n  des\n@@ -3322,39 +3322,37 @@\n lse%0A            \n-return%0A\n+else:\n %0A        # Se ti\n@@ -3348,39 +3348,53 @@\n     \n-# Se tiver bateria e carregador\n+        print(f%22Usando por %7Btempo%7D minutos%22)%0A\n %0A   \n@@ -3390,32 +3390,34 @@\n utos%22)%0A%0A        \n+el\n if self.__bateri\n@@ -3457,33 +3457,49 @@\n     \n-self.__tempo_uso += tempo\n+# estava descarregada, mas tem carregador\n %0A   \n@@ -3514,26 +3514,23 @@\n  self.__\n-carregador\n+bateria\n .carrega\n@@ -3538,24 +3538,43 @@\n (self.__\n-bateria,\n+carregador.get_potencia() *\n  tempo)%0A\n@@ -3634,105 +3634,42 @@\n     \n-# ---------- M%C3%A9todos de conex%C3%A3o ----------%0A    def set_bateria(self, capacidade: int):%0A        if\n+    elif self.__carregador and not\n  sel\n@@ -3675,36 +3675,24 @@\n lf.__bateria\n- is not None\n :%0A          \n@@ -3697,164 +3697,113 @@\n     \n-print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_bateria(self):%0A        if not self.__bateria\n+# sem bateria, mas ligado ao carregador%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A        else\n :%0A  \n@@ -3829,115 +3829,26 @@\n il: \n-Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bat\n+sem en\n er\n+g\n ia\n-%7D\n %22)%0A    \n-    self.__bateria = None%0A\n     \n@@ -3886,137 +3886,82 @@\n def \n-set_carregador(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conect\n+mostrar(self):%0A        status = %22Ligado%22 if self.__ligado else %22Deslig\n ado%22\n-)\n %0A   \n@@ -3969,219 +3969,104 @@\n     \n-    return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_carregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7B\n+bateria_str = str(self.__bateria) if self.__bateria else %22Nenhuma%22%0A        carregador_str = str(\n self\n@@ -4082,19 +4082,12 @@\n ador\n-%7D%22)%0A       \n+) if\n  sel\n@@ -4105,196 +4105,113 @@\n dor \n-= None%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A            self.__ligado = False%0A%0A%0A# ---------------------- TESTES ----------------------%0A%0Aif __name__ == %22__main__%22:\n+else %22Desconectado%22%0A        print(f%22Status: %7Bstatus%7D, Bateria: %7Bbateria_str%7D, Carregador: %7Bcarregador_str%7D%22)\n %0A\n",
            "lines": "133"
        },
        {
            "label": "2025-10-28_18-45-05",
            "content": "@@ -1,4620 +1,4405 @@\n-class Battery:%0A    def __init__(self, capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, time: int) -%3E bool:%0A        if self.__charge %3E= time:%0A            self.__charge -= time%0A            return True%0A        else:%0A            self.__charge = 0%0A            return False%0A%0A    def charge(self, value: int):%0A        self.__charge = min(self.__charge + value, self.__capacity)%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_used = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is None:%0A            self.__battery = Battery(capacity)%0A        else:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is None:%0A            self.__charger = Charger(power)%0A        else:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False if self.__battery is None else self.__on%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if self.__charger is not None or (self.__battery and self.__battery.get_charge() %3E 0):%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, time: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        # caso s%C3%B3 tenha carregador%0A        if self.__charger is not None and self.__battery is None:%0A            self.__time_used += time%0A            return%0A%0A        # caso s%C3%B3 tenha bateria%0A        if self.__battery is not None and self.__charger is None:%0A            if self.__battery.get_charge() %3E= time:%0A                self.__battery.use(time)%0A                self.__time_used += time%0A            else:%0A                print(%22fail: descarregou%22)%0A                self.__battery.use(self.__battery.get_charge())%0A                self.__on = False%0A            return%0A%0A        # caso tenha bateria e carregador%0A        if self.__battery is not None and self.__charger is not None:%0A            self.__time_used += time%0A            total = self.__charger.get_power() * time%0A            self.__battery.charge(total - time)  # gasta 1 por minuto, carrega (power - 1)%0A            if self.__battery.get_charge() %3E= self.__battery.get_capacity():%0A                self.__battery.charge(0)%0A            return%0A%0A    def show(self):%0A        if not self.__on:%0A            status = %22desligado%22%0A        else:%0A            status = f%22ligado por %7Bself.__time_used%7D min%22%0A%0A        itens = %5B%5D%0A        if self.__charger is not None:%0A            itens.append(str(self.__charger))%0A        if self.__battery is not None:%0A            itens.append(str(self.__battery))%0A%0A        if itens:%0A            print(f%22Notebook: %7Bstatus%7D, %22 + %22, %22.join(itens))%0A        else:%0A            print(f%22Notebook: %7Bstatus%7D%22)%0A%0A%0Adef main():%0A    note = Notebook()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if line == %22end%22:%0A            break%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A        print(f%22$%7Bline%7D%22)%0A%0A        if cmd == %22show%22:%0A            note.show()%0A        elif cmd == %22turn_on%22:%0A            note.turn_on()%0A        elif cmd == %22turn_off%22:%0A            note.turn_off()%0A        elif cmd == %22use%22:%0A            note.use(int(parts%5B1%5D))%0A        elif cmd == %22set_battery%22:%0A            note.set_battery(int(parts%5B1%5D))%0A        elif cmd == %22rm_battery%22:%0A            note.rm_battery()%0A        elif cmd == %22set_charger%22:%0A            note.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            note.rm_charger()%0A        elif cmd == %22end%22:%0A            break%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def get_carga(self) -%3E int:%0A        return self.__carga%0A%0A    def get_capacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def usar(self, tempo: int):%0A        %22%22%22Diminui a carga da bateria, retorna quanto tempo foi poss%C3%ADvel usar.%22%22%22%0A        if self.__carga == 0:%0A            return 0%0A        tempo_usado = min(tempo, self.__carga)%0A        self.__carga -= tempo_usado%0A        return tempo_usado%0A%0A    def carregar(self, tempo: int):%0A        %22%22%22Aumenta a carga da bateria sem ultrapassar a capacidade.%22%22%22%0A        self.__carga = min(self.__capacidade, self.__carga + tempo)%0A%0A    def mostrar(self):%0A        print(f%22Bateria %7Bself.__carga%7D/%7Bself.__capacidade%7D%22)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self) -%3E int:%0A        return self.__potencia%0A%0A    def carregar(self, bateria: Bateria, tempo: int):%0A        %22%22%22Carrega a bateria por um tempo.%22%22%22%0A        if bateria is not None:%0A            bateria.carregar(self.__potencia * tempo)%0A%0A    def mostrar(self):%0A        print(f%22Carregador %7Bself.__potencia%7DW%22)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__tempo_uso = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    # ---------- M%C3%A9todos de status ----------%0A    def mostrar(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        msg = f%22Notebook: %7Bstatus%7D%22%0A        if self.__ligado:%0A            msg += f%22 por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D%22%0A        if self.__bateria:%0A            msg += f%22, Bateria %7Bself.__bateria%7D%22%0A        print(msg)%0A%0A    # ---------- M%C3%A9todos de liga%C3%A7%C3%A3o ----------%0A    def ligar(self):%0A        if self.__ligado:%0A            return%0A        if self.__carregador or (self.__bateria and self.__bateria.get_carga() %3E 0):%0A            self.__ligado = True%0A            print(%22Notebook ligado%22)%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22Notebook desligado%22)%0A%0A    # ---------- M%C3%A9todos de uso ----------%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        # Se tiver apenas carregador, s%C3%B3 soma o tempo%0A        if self.__carregador and not self.__bateria:%0A            self.__tempo_uso += tempo%0A            print(%22Notebook utilizado com sucesso%22)%0A            return%0A%0A        # Se tiver apenas bateria%0A        if self.__bateria and not self.__carregador:%0A            usado = self.__bateria.usar(tempo)%0A            self.__tempo_uso += usado%0A            if usado %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A            return%0A%0A        # Se tiver bateria e carregador%0A        if self.__bateria and self.__carregador:%0A            self.__tempo_uso += tempo%0A            self.__carregador.carregar(self.__bateria, tempo)%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A    # ---------- M%C3%A9todos de conex%C3%A3o ----------%0A    def set_bateria(self, capacidade: int):%0A        if self.__bateria is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_bateria(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        self.__ligado = False%0A%0A    def set_carregador(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_carregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A            self.__ligado = False%0A%0A%0A# ---------------------- TESTES ----------------------%0A%0Aif __name__ == %22__main__%22:\n %0A\n",
            "lines": "144"
        },
        {
            "label": "2025-10-28_18-45-51",
            "content": "@@ -6,3932 +6,4615 @@\n  Bat\n-eria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def get_carga(self):%0A        return self.__carga%0A%0A    def get_capacidade(self):%0A        return self.__capacidade%0A%0A    def descarregar(self, tempo: int) -%3E int:%0A        %22%22%22Diminui a carga at%C3%A9 0. Retorna quanto foi realmente gasto.%22%22%22%0A        gasto = min(self.__carga, tempo)%0A        self.__carga -= gasto%0A        return gasto%0A%0A    def carregar(self, tempo: int):%0A        %22%22%22Aumenta a carga at%C3%A9 o limite da capacidade.%22%22%22%0A        self.__carga = min(self.__capacidade, self.__carga + tempo)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__tempo = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    # ---------------- M%C3%A9todos de Exibi%C3%A7%C3%A3o ----------------%0A    def mostrar(self):%0A        estado = f%22Notebook: %7B'ligado por ' + str(self.__tempo) + ' min' if self.__ligado else 'desligado'%7D%22%0A        partes = %5B%5D%0A        if self.__carregador:%0A            partes.append(f%22Carregador %7Bself.__carregador%7D%22)%0A        if self.__bateria:%0A            partes.append(f%22Bateria %7Bself.__bateria%7D%22)%0A        if partes:%0A            print(estado + %22, %22 + %22, %22.join(partes))%0A        else:%0A            print(estado)%0A%0A    # ---------------- M%C3%A9todos do Carregador ----------------%0A    def conectar_carregador(self, potencia: int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def remover_carregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        # se n%C3%A3o tem bateria ou a bateria est%C3%A1 descarregada, desliga%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A            self.__ligado = False%0A%0A    # ---------------- M%C3%A9todos da Bateria ----------------%0A    def conectar_bateria(self, capacidade: int):%0A        self.__bateria = Bateria(capacidade)%0A%0A    def remover_bateria(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    # ---------------- M%C3%A9todos de Controle ----------------%0A    def ligar(self):%0A        if (self.__bateria and self.__bateria.get_carga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A            self.__tempo = 0  # sempre zera ao ligar%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        self.__ligado = False%0A%0A    def usar(self, minutos: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        # apenas bateria%0A        if self.__bateria and not self.__carregador:%0A            if self.__bateria.get_carga() == 0:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A                return%0A            gasto = self.__bateria.descarregar(minutos)%0A            self.__tempo += gasto%0A            if gasto %3C minutos:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A%0A        # apenas carregador%0A        elif self.__carregador and not self.__bateria:%0A            self.__tempo += minutos%0A%0A        # bateria + carregador%0A        elif self.__bateria and self.__carregador:%0A            self.__tempo += minutos%0A            ganho = minutos * self.__carregador.get_potencia()%0A            self.__bateria.carregar(ganho\n+tery:%0A    def __init__(self, capacity: int):%0A        self.__capacity = capacity%0A        self.__charge = capacity%0A%0A    def use(self, time: int) -%3E bool:%0A        if self.__charge %3E= time:%0A            self.__charge -= time%0A            return True%0A        else:%0A            self.__charge = 0%0A            return False%0A%0A    def charge(self, value: int):%0A        self.__charge = min(self.__charge + value, self.__capacity)%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.__charge%7D/%7Bself.__capacity%7D%22%0A%0A    def get_charge(self):%0A        return self.__charge%0A%0A    def get_capacity(self):%0A        return self.__capacity%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.__power = power%0A%0A    def get_power(self):%0A        return self.__power%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__power%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__on = False%0A        self.__time_used = 0%0A        self.__battery = None%0A        self.__charger = None%0A%0A    def set_battery(self, capacity: int):%0A        if self.__battery is None:%0A            self.__battery = Battery(capacity)%0A        else:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A%0A    def rm_battery(self):%0A        if self.__battery is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__battery%7D%22)%0A        self.__battery = None%0A        self.__on = False%0A%0A    def set_charger(self, power: int):%0A        if self.__charger is None:%0A            self.__charger = Charger(power)%0A        else:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A%0A    def rm_charger(self):%0A        if self.__charger is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__charger.get_power()%7DW%22)%0A        self.__charger = None%0A        self.__on = False if self.__battery is None else self.__on%0A%0A    def turn_on(self):%0A        if self.__on:%0A            return%0A        if self.__charger is not None or (self.__battery and self.__battery.get_charge() %3E 0):%0A            self.__on = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__on = False%0A%0A    def use(self, time: int):%0A        if not self.__on:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        # caso s%C3%B3 tenha carregador%0A        if self.__charger is not None and self.__battery is None:%0A            self.__time_used += time%0A            return%0A%0A        # caso s%C3%B3 tenha bateria%0A        if self.__battery is not None and self.__charger is None:%0A            if self.__battery.get_charge() %3E= time:%0A                self.__battery.use(time)%0A                self.__time_used += time%0A            else:%0A                print(%22fail: descarregou%22)%0A                self.__battery.use(self.__battery.get_charge())%0A                self.__on = False%0A            return%0A%0A        # caso tenha bateria e carregador%0A        if self.__battery is not None and self.__charger is not None:%0A            self.__time_used += time%0A            total = self.__charger.get_power() * time%0A            self.__battery.charge(total - time)  # gasta 1 por minuto, carrega (power - 1)%0A            if self.__battery.get_charge() %3E= self.__battery.get_capacity():%0A                self.__battery.charge(0)%0A            return%0A%0A    def show(self):%0A        if not self.__on:%0A            status = %22desligado%22%0A        else:%0A            status = f%22ligado por %7Bself.__time_used%7D min%22%0A%0A        itens = %5B%5D%0A        if self.__charger is not None:%0A            itens.append(str(self.__charger))%0A        if self.__battery is not None:%0A            itens.append(str(self.__battery))%0A%0A        if itens:%0A            print(f%22Notebook: %7Bstatus%7D, %22 + %22, %22.join(itens))%0A        else:%0A            print(f%22Notebook: %7Bstatus%7D%22)%0A%0A%0Adef main():%0A    note = Notebook()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if line == %22end%22:%0A            break%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A        print(f%22$%7Bline%7D%22)%0A%0A        if cmd == %22show%22:%0A            note.show()%0A        elif cmd == %22turn_on%22:%0A            note.turn_on()%0A        elif cmd == %22turn_off%22:%0A            note.turn_off()%0A        elif cmd == %22use%22:%0A            note.use(int(parts%5B1%5D))%0A        elif cmd == %22set_battery%22:%0A            note.set_battery(int(parts%5B1%5D))%0A        elif cmd == %22rm_battery%22:%0A            note.rm_battery()%0A        elif cmd == %22set_charger%22:%0A            note.set_charger(int(parts%5B1%5D))%0A        elif cmd == %22rm_charger%22:%0A            note.rm_charger()%0A        elif cmd == %22end%22:%0A            break%0A%0A%0Aif __name__ == %22__main__%22:%0A    main(\n )%0A\n",
            "lines": "167"
        },
        {
            "label": "2025-10-28_18-55-23",
            "content": "@@ -3934,989 +3934,4 @@\n ho)%0A\n-%0Adef main():%0A    note = Notebook()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        print(line)  # %3C--- imprime o comando digitado, para coincidir com os testes%0A%0A        partes = line.split()%0A        cmd = partes%5B0%5D%0A%0A        if cmd == %22$end%22:%0A            break%0A        elif cmd == %22$show%22:%0A            note.mostrar()%0A        elif cmd == %22$turn_on%22:%0A            note.ligar()%0A        elif cmd == %22$turn_off%22:%0A            note.desligar()%0A        elif cmd == %22$use%22:%0A            note.usar(int(partes%5B1%5D))%0A        elif cmd == %22$set_charger%22:%0A            note.conectar_carregador(int(partes%5B1%5D))%0A        elif cmd == %22$rm_charger%22:%0A            note.remover_carregador()%0A        elif cmd == %22$set_battery%22:%0A            note.conectar_bateria(int(partes%5B1%5D))%0A        elif cmd == %22$rm_battery%22:%0A            note.remover_bateria()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22)\n",
            "lines": "123"
        },
        {
            "label": "2025-10-28_18-56-26",
            "content": "@@ -142,31 +142,24 @@\n _carga(self)\n- -%3E int\n :%0A        re\n@@ -201,31 +201,24 @@\n cidade(self)\n- -%3E int\n :%0A        re\n@@ -279,32 +279,105 @@\n o: int) -%3E int:%0A\n+        %22%22%22Diminui a carga at%C3%A9 0. Retorna quanto foi realmente gasto.%22%22%22%0A\n         gasto = \n@@ -481,32 +481,90 @@\n f, tempo: int):%0A\n+        %22%22%22Aumenta a carga at%C3%A9 o limite da capacidade.%22%22%22%0A\n         self.__c\n@@ -620,76 +620,8 @@\n o)%0A%0A\n-    def esta_vazia(self) -%3E bool:%0A        return self.__carga == 0%0A%0A\n     \n@@ -813,23 +813,16 @@\n ia(self)\n- -%3E int\n :%0A      \n@@ -887,27 +887,16 @@\n eturn f%22\n-Carregador \n %7Bself.__\n@@ -990,38 +990,33 @@\n      self.__\n-bateria = None\n+tempo = 0\n %0A        sel\n@@ -1023,79 +1023,90 @@\n f.__\n-carregador = None%0A        self.__tempo = 0  # tempo total de uso ligado\n+bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None\n %0A%0A  \n@@ -1117,32 +1117,55 @@\n ----------------\n+ M%C3%A9todos de Exibi%C3%A7%C3%A3o --\n ----------%0A    d\n@@ -1150,32 +1150,36 @@\n %C3%A7%C3%A3o ------------\n+----\n %0A    def set_bat\n@@ -1175,165 +1175,170 @@\n def \n-set_battery(self, capacidade: int):%0A        if self.__bateria is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A\n+mostrar(self):%0A        estado = f%22Notebook: %7B'ligado por ' + str(self.__tempo) + ' min' if self.__ligado else 'desligado'%7D%22%0A        partes = %5B%5D%0A \n        \n+if\n  self.__\n bate\n@@ -1337,64 +1337,80 @@\n f.__\n-bateria = Bateria(capacidade)%0A%0A    def rm_battery(self):\n+carregador:%0A            partes.append(f%22Carregador %7Bself.__carregador%7D%22)\n %0A   \n@@ -1431,24 +1431,16 @@\n _bateria\n- is None\n :%0A      \n@@ -1450,31 +1450,47 @@\n    p\n-rint(%22fail: Sem \n+artes.append(f%22Bateria %7Bself.__\n bateria\n+%7D\n %22)%0A \n@@ -1500,92 +1500,71 @@\n     \n-    return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None\n+if partes:%0A            print(estado + %22, %22 + %22, %22.join(partes))\n %0A   \n@@ -1572,78 +1572,39 @@\n     \n-s\n el\n-f.__ligado = False  # desligar se removida%0A        self.__tempo = 0\n+se:%0A            print(estado)\n %0A%0A  \n@@ -1615,32 +1615,55 @@\n ----------------\n+ M%C3%A9todos do Carregador \n ----------%0A    d\n@@ -1648,32 +1648,38 @@\n gador ----------\n+------\n %0A    def set_cha\n@@ -1675,18 +1675,26 @@\n def \n-set\n+conectar\n _c\n-h\n ar\n-ge\n+regado\n r(se\n@@ -1745,20 +1745,8 @@\n ador\n- is not None\n :%0A  \n@@ -1876,16 +1876,24 @@\n ef r\n-m\n+emover\n _c\n-h\n ar\n-ge\n+regado\n r(se\n@@ -1900,32 +1900,36 @@\n lf):%0A        if \n+not \n self.__carregado\n@@ -1933,16 +1933,8 @@\n ador\n- is None\n :%0A  \n@@ -2035,33 +2035,17 @@\n rregador\n-.get_potencia()%7DW\n+%7D\n %22)%0A     \n@@ -2080,38 +2080,147 @@\n         \n-self.__ligado = False%0A\n+# se n%C3%A3o tem bateria ou a bateria est%C3%A1 descarregada, desliga%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A    \n         \n@@ -2226,25 +2226,30 @@\n  self.__\n-tempo = 0\n+ligado = False\n %0A%0A    # \n@@ -2256,32 +2256,54 @@\n ----------------\n+ M%C3%A9todos da Bateria --\n ----------%0A    d\n@@ -2288,32 +2288,36 @@\n ria ------------\n+----\n %0A    def turn_on\n@@ -2313,15 +2313,118 @@\n def \n-turn_on\n+conectar_bateria(self, capacidade: int):%0A        self.__bateria = Bateria(capacidade)%0A%0A    def remover_bateria\n (sel\n@@ -2434,37 +2434,42 @@\n %0A        if \n+not \n self.__\n-ligado\n+bateria\n :%0A          \n@@ -2487,17 +2487,19 @@\n il: \n-j%C3%A1 ligado\n+Sem bateria\n %22)%0A \n@@ -2524,16 +2524,240 @@\n         \n+print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    # ---------------- M%C3%A9todos de Controle ----------------%0A    def ligar(self):%0A        \n if (self\n@@ -2762,36 +2762,32 @@\n lf.__bateria and\n- not\n  self.__bateria.\n@@ -2790,20 +2790,23 @@\n ria.\n-esta_vazia()\n+get_carga() %3E 0\n ) or\n@@ -2891,46 +2891,31 @@\n = 0 \n-if self.__tempo == 0 else self.__tempo\n+ # sempre zera ao ligar\n %0A   \n@@ -2988,194 +2988,54 @@\n def \n-turn_off(self):%0A        if not self.__ligado:%0A            print(%22fail: j%C3%A1 desligado%22)%0A            return%0A        self.__ligado = False%0A        print(%22%22)%0A%0A    # --------------------------\n+desligar(self):%0A        self.__ligado = False%0A\n %0A   \n@@ -3045,21 +3045,24 @@\n f us\n-e\n+ar\n (self, \n-tempo\n+minutos\n : in\n@@ -3166,25 +3166,22 @@\n   # \n-Carregador apenas\n+apenas bateria\n %0A   \n@@ -3195,26 +3195,23 @@\n  self.__\n-carregador\n+bateria\n  and not\n@@ -3210,39 +3210,42 @@\n  and not self.__\n-bateria\n+carregador\n :%0A            se\n@@ -3246,127 +3246,147 @@\n     \n+if \n self.__\n-tempo += tempo%0A            return%0A%0A        # Bateria apenas%0A\n+bateria.get_carga() == 0:%0A                print(%22fail: descarregou%22)%0A         \n        \n- if \n self.__\n-bateria and not self.__carregador:\n+ligado = False%0A                return\n %0A   \n@@ -3429,21 +3429,23 @@\n arregar(\n-tempo\n+minutos\n )%0A      \n@@ -3495,21 +3495,23 @@\n gasto %3C \n-tempo\n+minutos\n :%0A      \n@@ -3581,32 +3581,33 @@\n ado = False%0A\n+%0A\n         \n     return%0A%0A\n@@ -3590,34 +3590,134 @@\n se%0A%0A        \n-    return\n+# apenas carregador%0A        elif self.__carregador and not self.__bateria:%0A            self.__tempo += minutos\n %0A%0A        # \n@@ -3716,17 +3716,17 @@\n       # \n-B\n+b\n ateria +\n@@ -3737,32 +3737,34 @@\n regador%0A        \n+el\n if self.__bateri\n@@ -3804,40 +3804,31 @@\n     \n-# carrega de acordo com pot%C3%AAncia\n+self.__tempo += minutos\n %0A   \n@@ -3843,16 +3843,26 @@\n  ganho =\n+ minutos *\n  self.__\n@@ -3890,16 +3890,8 @@\n ia()\n- * tempo\n %0A   \n@@ -3934,41 +3934,131 @@\n ho)%0A\n-            self.__tempo += tempo\n+%0Adef main():%0A    note = Notebook()%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:\n %0A   \n@@ -4070,68 +4070,142 @@\n     \n+b\n re\n-turn%0A%0A    # --------------------------%0A    def show(self):\n+ak%0A        if not line:%0A            continue%0A%0A        print(line)  # %3C--- imprime o comando digitado, para coincidir com os testes%0A\n %0A   \n@@ -4217,102 +4217,182 @@\n part\n+e\n s = \n-%5B%5D%0A%0A        if self.__ligado:%0A            msg = f%22Notebook: ligado por %7Bself.__tempo%7D mi\n+line.split()%0A        cmd = partes%5B0%5D%0A%0A        if cmd == %22$end%22:%0A            break%0A        elif cmd == %22$show%22:%0A            note.mostrar()%0A        elif cmd == %22$turn_o\n n%22\n+:\n %0A   \n@@ -4400,54 +4400,151 @@\n     \n-else:%0A            msg\n+    note.ligar()%0A        elif cmd\n  =\n+=\n  %22\n-Notebook: desligado%22%0A\n+$turn_off%22:%0A            note.desligar()%0A        elif cmd == %22$use%22:%0A            note.usar(int(partes%5B1%5D))\n %0A   \n@@ -4548,36 +4548,42 @@\n         \n+el\n if \n-self._\n+cmd == %22$set\n _c\n+h\n ar\n-regador\n+ger%22\n :%0A      \n@@ -4592,92 +4592,241 @@\n     \n-msg += f%22, Carregador %7Bself.__carregador.get_potencia()%7DW%22%0A        if self._\n+note.conectar_carregador(int(partes%5B1%5D))%0A        elif cmd == %22$rm_charger%22:%0A            note.remover_carregador()%0A        elif cmd == %22$set_battery%22:%0A            note.conectar_bateria(int(partes%5B1%5D))%0A        elif cmd == %22$rm\n _bat\n+t\n er\n-ia\n+y%22\n :%0A  \n@@ -4839,60 +4839,84 @@\n     \n-msg += f%22, Bateria %7Bself.__bateria%7D%22%0A%0A        print(msg\n+note.remover_bateria()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22\n )\n",
            "lines": "159"
        },
        {
            "label": "2025-10-28_19-01-26",
            "content": "@@ -3915,933 +3915,4 @@\n msg)\n-%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A%0A        if line == %22%22:%0A            continue%0A%0A        print(f%22$%7Bline%7D%22)  # o QxCode mostra o comando digitado%0A%0A        cmd = line.split()%0A        op = cmd%5B0%5D%0A%0A        if op == %22end%22:%0A            break%0A        elif op == %22show%22:%0A            nb.show()%0A        elif op == %22turn_on%22:%0A            nb.turn_on()%0A        elif op == %22turn_off%22:%0A            nb.turn_off()%0A        elif op == %22use%22:%0A            nb.use(int(cmd%5B1%5D))%0A        elif op == %22set_battery%22:%0A            nb.set_battery(int(cmd%5B1%5D))%0A        elif op == %22rm_battery%22:%0A            nb.rm_battery()%0A        elif op == %22set_charger%22:%0A            nb.set_charger(int(cmd%5B1%5D))%0A        elif op == %22rm_charger%22:%0A            nb.rm_charger()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "137"
        },
        {
            "label": "2025-10-28_19-02-08",
            "content": "@@ -4111,64 +4111,63 @@\n     \n-# %E2%9C%85 imprime o comando primeiro%0A        print(f%22$%7Bline%7D%22)\n+print(f%22$%7Bline%7D%22)  # o QxCode mostra o comando digitado\n %0A%0A  \n@@ -4796,12 +4796,52 @@\n o inv%C3%A1lido%22)\n+%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "179"
        },
        {
            "label": "2025-10-28_19-02-59",
            "content": "@@ -142,24 +142,31 @@\n _carga(self)\n+ -%3E int\n :%0A        re\n@@ -208,24 +208,31 @@\n cidade(self)\n+ -%3E int\n :%0A        re\n@@ -284,32 +284,39 @@\n elf, tempo: int)\n+ -%3E int\n :%0A        gasto \n@@ -515,32 +515,40 @@\n esta_vazia(self)\n+ -%3E bool\n :%0A        return\n@@ -756,32 +756,39 @@\n t_potencia(self)\n+ -%3E int\n :%0A        return\n@@ -1035,20 +1035,75 @@\n empo\n-_ligado = 0%0A\n+ = 0  # tempo total de uso ligado%0A%0A    # --------------------------\n %0A   \n@@ -1110,28 +1110,28 @@\n  def set_bat\n+t\n er\n-ia\n+y\n (self, capac\n@@ -1135,32 +1135,138 @@\n pacidade: int):%0A\n+        if self.__bateria is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A\n         self.__b\n@@ -1309,20 +1309,20 @@\n f rm_bat\n+t\n er\n-ia\n+y\n (self):%0A\n@@ -1500,112 +1500,112 @@\n     \n-# Se n%C3%A3o tiver carregador, desligar%0A        if not self.__carregador:%0A            self.__ligado = False%0A\n+self.__ligado = False  # desligar se removida%0A        self.__tempo = 0%0A%0A    # --------------------------\n %0A   \n@@ -1663,32 +1663,44 @@\n elf.__carregador\n+ is not None\n :%0A            pr\n@@ -1838,28 +1838,24 @@\n %0A        if \n-not \n self.__carre\n@@ -1851,32 +1851,40 @@\n elf.__carregador\n+ is None\n :%0A            pr\n@@ -2038,64 +2038,29 @@\n     \n-# Se n%C3%A3o tiver bateria ou bateria descarregada, desligar\n+self.__ligado = False\n %0A   \n@@ -2068,96 +2068,58 @@\n     \n-if not \n self.__\n-bateria or self.__bateria.esta_vazia():%0A            self.__ligado = False%0A\n+tempo = 0%0A%0A    # --------------------------\n %0A   \n@@ -2189,31 +2189,17 @@\n (%22fail: \n-notebook j%C3%A1 est\n+j\n %C3%A1 ligado\n@@ -2355,32 +2355,63 @@\n     \n-print(%22Notebook ligado%22)\n+self.__tempo = 0 if self.__tempo == 0 else self.__tempo\n %0A   \n@@ -2555,23 +2555,9 @@\n il: \n-notebook j%C3%A1 est\n+j\n %C3%A1 de\n@@ -2634,29 +2634,44 @@\n nt(%22\n-Notebook desligado%22)%0A\n+%22)%0A%0A    # --------------------------\n %0A   \n@@ -2793,33 +2793,64 @@\n         \n-if self.__bateria\n+# Carregador apenas%0A        if self.__carregador\n  and not\n@@ -2860,37 +2860,24 @@\n lf.__bateria\n-.esta_vazia()\n :%0A          \n@@ -2882,49 +2882,29 @@\n     \n-usado = self.__bateria.descarregar(\n+self.__tempo += \n tempo\n-)\n %0A   \n@@ -2916,79 +2916,74 @@\n     \n-# se tiver carregador, recarrega a bateria durante o uso%0A            if\n+return%0A%0A        # Bateria apenas%0A        if self.__bateria and not\n  sel\n@@ -3002,35 +3002,39 @@\n or:%0A            \n-   \n+gasto =\n  self.__bateria.\n@@ -3025,32 +3025,35 @@\n  self.__bateria.\n+des\n carregar(self.__\n@@ -3049,43 +3049,8 @@\n gar(\n-self.__carregador.get_potencia() * \n temp\n@@ -3080,23 +3080,16 @@\n empo\n-_ligado += usad\n+ += gast\n o%0A  \n@@ -3105,12 +3105,12 @@\n  if \n-usad\n+gast\n o %3C \n@@ -3209,75 +3209,80 @@\n     \n-elif self.__bateria and self.__bateria.esta_vazia():%0A            if\n+    return%0A%0A        # Bateria + carregador%0A        if self.__bateria and\n  sel\n@@ -3309,20 +3309,16 @@\n         \n-    \n # carreg\n@@ -3322,23 +3322,30 @@\n rega\n-ndo enquanto us\n+ de acordo com pot%C3%AAnci\n a%0A  \n@@ -3358,36 +3358,16 @@\n     \n-    self.__bateria.carregar(\n+ganho = \n self\n@@ -3398,28 +3398,25 @@\n ia() * tempo\n-)%0A  \n+%0A\n             \n@@ -3419,190 +3419,165 @@\n     \n-  \n self.__\n-tempo_ligado += tempo%0A                print(f%22Usando por %7Btempo%7D minutos%22)%0A            else:%0A                print(%22fail: sem energia%22)%0A                self.__ligado = False\n+bateria.carregar(ganho)%0A            self.__tempo += tempo%0A            return%0A%0A    # --------------------------%0A    def show(self):%0A        parts = %5B%5D%0A\n %0A   \n@@ -3581,18 +3581,16 @@\n         \n-el\n if self.\n@@ -3587,34 +3587,30 @@\n   if self.__\n-carre\n+li\n gado\n-r\n :%0A          \n@@ -3615,69 +3615,38 @@\n     \n-self.__tempo_ligado += tempo%0A            print(f%22Usan\n+msg = f%22Notebook: liga\n do por %7B\n temp\n@@ -3641,16 +3641,23 @@\n do por %7B\n+self.__\n tempo%7D m\n@@ -3662,14 +3662,9 @@\n  min\n-utos%22)\n+%22\n %0A   \n@@ -3690,268 +3690,137 @@\n     \n-print(%22fail: sem energia%22)%0A            self.__ligado = False%0A%0A    def show(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        parts = %5Bf%22Notebook: %7Bstatus%7D%22%5D%0A        if self.__carregador:%0A            parts.append(str(self.__carregador))\n+msg = %22Notebook: desligado%22%0A%0A        if self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador.get_potencia()%7DW%22\n %0A   \n@@ -3859,23 +3859,19 @@\n     \n-parts.append(f%22\n+msg += f%22, \n Bate\n@@ -3883,33 +3883,33 @@\n self.__bateria%7D%22\n-)\n+%0A\n %0A        print(%22\n@@ -3911,26 +3911,12 @@\n int(\n-%22, %22.join(parts))%0A\n+msg)\n %0A%0Ade\n@@ -4045,32 +4045,33 @@\n           break%0A\n+%0A\n         if not l\n@@ -4069,16 +4069,18 @@\n  if \n-not \n line\n+ == %22%22\n :%0A  \n@@ -4108,16 +4108,18 @@\n        #\n+ %E2%9C%85\n  imprime\n@@ -4119,16 +4119,18 @@\n imprime \n+o \n comando \n@@ -4160,24 +4160,25 @@\n f%22$%7Bline%7D%22)%0A\n+%0A\n         cmd \n@@ -4530,20 +4530,20 @@\n .set_bat\n+t\n er\n-ia\n+y\n (int(cmd\n@@ -4602,20 +4602,20 @@\n b.rm_bat\n+t\n er\n-ia\n+y\n ()%0A     \n@@ -4805,44 +4805,4 @@\n do%22)\n-%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "176"
        },
        {
            "label": "2025-10-28_19-03-52",
            "content": "@@ -1019,17 +1019,18 @@\n  def set\n-B\n+_b\n ateria(s\n@@ -1038,24 +1038,23 @@\n lf, \n-bateria: Bateria\n+capacidade: int\n ):%0A \n@@ -1077,23 +1077,35 @@\n teria = \n-b\n+B\n ateria\n+(capacidade)\n %0A%0A    de\n@@ -1108,17 +1108,18 @@\n   def rm\n-B\n+_b\n ateria(s\n@@ -1141,32 +1141,40 @@\n f self.__bateria\n+ is None\n :%0A            pr\n@@ -1181,35 +1181,26 @@\n int(\n-f%22Removido %7Bself.__\n+%22fail: Sem \n bateria\n-%7D\n %22)%0A \n@@ -1210,20 +1210,49 @@\n         \n-b = \n+return%0A        print(f%22Removido %7B\n self.__b\n@@ -1257,16 +1257,19 @@\n _bateria\n+%7D%22)\n %0A       \n@@ -1261,36 +1261,32 @@\n eria%7D%22)%0A        \n-    \n self.__bateria =\n@@ -1303,127 +1303,152 @@\n     \n-    return b%0A        print(%22fail: Sem bateria%22)%0A        return None%0A%0A    def setCarregador(self, carregador: Carregador\n+# Se n%C3%A3o tiver carregador, desligar%0A        if not self.__carregador:%0A            self.__ligado = False%0A%0A    def set_charger(self, potencia: int\n ):%0A \n@@ -1574,17 +1574,17 @@\n gador = \n-c\n+C\n arregado\n@@ -1584,16 +1584,26 @@\n rregador\n+(potencia)\n %0A%0A    de\n@@ -1606,25 +1606,23 @@\n   def rm\n-Carregado\n+_charge\n r(self):\n@@ -1625,32 +1625,36 @@\n lf):%0A        if \n+not \n self.__carregado\n@@ -1652,32 +1652,89 @@\n carregador:%0A    \n+        print(%22fail: Sem carregador%22)%0A            return%0A\n         print(f%22\n@@ -1784,28 +1784,24 @@\n W%22)%0A        \n-    \n self.__carre\n@@ -1825,56 +1825,160 @@\n     \n-    return%0A        print(%22fail: Sem carregador%22)\n+# Se n%C3%A3o tiver bateria ou bateria descarregada, desligar%0A        if not self.__bateria or self.__bateria.esta_vazia():%0A            self.__ligado = False\n %0A%0A  \n@@ -1983,21 +1983,23 @@\n     def \n-ligar\n+turn_on\n (self):%0A\n@@ -2035,32 +2035,38 @@\n          print(%22\n+fail: \n notebook j%C3%A1 est%C3%A1\n@@ -2323,24 +2323,24 @@\n     def \n-desligar\n+turn_off\n (self):%0A\n@@ -2354,34 +2354,11 @@\n  if \n-self.__ligado:%0A           \n+not\n  sel\n@@ -2363,32 +2363,25 @@\n elf.__ligado\n- = False\n+:\n %0A           \n@@ -2380,32 +2380,38 @@\n          print(%22\n+fail: \n notebook desliga\n@@ -2403,16 +2403,24 @@\n otebook \n+j%C3%A1 est%C3%A1 \n desligad\n@@ -2427,34 +2427,65 @@\n o%22)%0A        \n-else:%0A    \n+    return%0A        self.__ligado = False%0A\n         prin\n@@ -2487,25 +2487,25 @@\n  print(%22\n-n\n+N\n otebook \n j%C3%A1 est%C3%A1 \n@@ -2492,32 +2492,24 @@\n t(%22Notebook \n-j%C3%A1 est%C3%A1 \n desligado%22)%0A\n@@ -2519,18 +2519,17 @@\n   def us\n-ar\n+e\n (self, t\n@@ -2631,121 +2631,8 @@\n rn%0A%0A\n-        tempo_usado = 0%0A        for _ in range(tempo):%0A            # se houver bateria, descarrega 1 unidade%0A    \n     \n@@ -2694,35 +2694,39 @@\n ():%0A            \n-   \n+usado =\n  self.__bateria.\n@@ -2737,17 +2737,21 @@\n arregar(\n-1\n+tempo\n )%0A      \n@@ -2765,11 +2765,10 @@\n  se \n-hou\n+ti\n ver \n@@ -2783,16 +2783,18 @@\n or, \n+re\n carrega \n 1*po\n@@ -2793,18 +2793,31 @@\n ega \n-1*potencia\n+a bateria durante o uso\n %0A   \n@@ -2828,35 +2828,16 @@\n      if \n-self.__bateria and \n self.__c\n@@ -2919,16 +2919,24 @@\n tencia()\n+ * tempo\n )%0A      \n@@ -2945,67 +2945,156 @@\n     \n-# se n%C3%A3o h%C3%A1 bateria e n%C3%A3o h%C3%A1 carregador, desliga%0A  \n+self.__tempo_ligado += usado%0A            if usado %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A\n         \n   if\n@@ -3093,18 +3093,13 @@\n     \n-  \n+el\n if \n-(not \n self\n@@ -3101,34 +3101,35 @@\n  self.__bateria \n-or\n+and\n  self.__bateria.\n@@ -3144,17 +3144,24 @@\n ia()\n-) and not\n+:%0A            if\n  sel\n@@ -3196,34 +3196,114 @@\n     \n-print(f%22fail: descarregou%22\n+# carregando enquanto usa%0A                self.__bateria.carregar(self.__carregador.get_potencia() * tempo\n )%0A  \n@@ -3319,38 +3319,116 @@\n      self.__\n+tempo_\n ligado \n++\n = \n-Fa\n+tempo%0A                print(f%22Usando por %7Btempo%7D minutos%22)%0A            e\n lse\n+:\n %0A           \n@@ -3436,43 +3436,72 @@\n     \n-break%0A            tempo_us\n+print(%22fail: sem energia%22)%0A                self.__lig\n ado \n-+\n = \n-1%0A\n+False\n %0A   \n@@ -3497,32 +3497,34 @@\n = False%0A        \n+el\n if self.__ligado\n@@ -3509,38 +3509,42 @@\n     elif self.__\n-li\n+carre\n gado\n+r\n :%0A            se\n@@ -3612,16 +3612,20 @@\n mpo%7D min\n+utos\n %22)%0A     \n@@ -3625,32 +3625,71 @@\n )%0A        else:%0A\n+            print(%22fail: sem energia%22)%0A\n             self\n@@ -3695,35 +3695,22 @@\n f.__\n-tempo_\n ligado \n-+\n = \n-tempo_usado\n+False\n %0A%0A  \n@@ -3791,83 +3791,8 @@\n do%22%0A\n-        tempo = f%22 por %7Bself.__tempo_ligado%7D min%22 if self.__ligado else %22%22%0A\n     \n@@ -3799,17 +3799,16 @@\n     part\n-e\n s = %5Bf%22N\n@@ -3824,23 +3824,16 @@\n %7Bstatus%7D\n-%7Btempo%7D\n %22%5D%0A     \n@@ -3865,33 +3865,32 @@\n             part\n-e\n s.append(str(sel\n@@ -3949,17 +3949,16 @@\n     part\n-e\n s.append\n@@ -4015,17 +4015,16 @@\n oin(part\n-e\n s))%0A%0A%0Ade\n",
            "lines": "170"
        },
        {
            "label": "2025-10-28_19-05-42",
            "content": "@@ -801,32 +801,43 @@\n        return f%22\n+Carregador \n %7Bself.__potencia\n@@ -1016,318 +1016,80 @@\n     \n-# M%C3%A9todos compat%C3%ADveis com shell%0A    def turn_on(self):%0A        self.ligar()%0A%0A    def turn_off(self):%0A        self.desligar()%0A%0A    def set_\n+def setBateria(self, \n bat\n-t\n er\n-y(self, capacidade):%0A        if self.__bateria is None:%0A            self.__bateria = Bateria(capacidade)%0A        else:%0A            print(%22fail: bateria j%C3%A1 conectada%22)\n+ia: Bateria):%0A        self.__bateria = bateria\n %0A%0A  \n@@ -1096,24 +1096,23 @@\n   def rm\n-_battery\n+Bateria\n (self):%0A\n@@ -1142,73 +1142,8 @@\n ia:%0A\n-            b = self.__bateria%0A            self.__bateria = None%0A\n     \n@@ -1168,17 +1168,30 @@\n movido %7B\n-b\n+self.__bateria\n %7D%22)%0A    \n@@ -1190,34 +1190,35 @@\n %7D%22)%0A            \n-if\n+b =\n  self.__bateria \n@@ -1220,48 +1220,9 @@\n eria\n- is None and not self.__carregador:%0A    \n+%0A\n     \n@@ -1232,37 +1232,37 @@\n      self.__\n-ligado = Fals\n+bateria = Non\n e%0A          \n@@ -1311,43 +1311,79 @@\n a%22)%0A\n-%0A    def set_charger(self, potencia\n+        return None%0A%0A    def setCarregador(self, carregador: Carregador\n ):%0A \n@@ -1413,16 +1413,8 @@\n ador\n- is None\n :%0A  \n@@ -1427,88 +1427,81 @@\n     \n-self.__carregador = Carregador(potencia)%0A        else:%0A            print(%22fail: \n+print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__\n carr\n@@ -1507,30 +1507,28 @@\n regador \n-j%C3%A1 conectado%22)\n+= carregador\n %0A%0A    de\n@@ -1531,23 +1531,25 @@\n   def rm\n-_charge\n+Carregado\n r(self):\n@@ -1595,189 +1595,157 @@\n     \n-c = self.__carregador%0A            self.__carregador = None%0A            print(f%22Removido %7Bc%7D%22)%0A        else:%0A            print(%22fail: Sem carregador%22)%0A%0A    # L%C3%B3gica de ligar/desligar\n+print(f%22Removido %7Bself.__carregador.get_potencia()%7DW%22)%0A            self.__carregador = None%0A            return%0A        print(%22fail: Sem carregador%22)%0A\n %0A   \n@@ -1844,33 +1844,32 @@\n          return%0A\n-%0A\n         if (self\n@@ -2168,33 +2168,33 @@\n          print(%22\n-N\n+n\n otebook desligad\n@@ -2264,28 +2264,8 @@\n %22)%0A%0A\n-    # Usar notebook%0A\n     \n@@ -2270,17 +2270,18 @@\n   def us\n-e\n+ar\n (self, t\n@@ -2284,16 +2284,21 @@\n f, tempo\n+: int\n ):%0A     \n@@ -2397,25 +2397,48 @@\n mpo_\n-restante = \n+usado = 0%0A        for _ in range(\n tempo\n-%0A\n+):\n %0A   \n@@ -2446,82 +2446,91 @@\n     \n-# Caso tenha bateria%0A        if self.__bateria:%0A            descarregado =\n+    # se houver bateria, descarrega 1 unidade%0A            if self.__bateria and not\n  sel\n@@ -2545,66 +2545,53 @@\n ria.\n-d\n es\n-carregar(tempo_restante)%0A            tempo_restante -= \n+ta_vazia():%0A                self.__bateria.\n desc\n@@ -2600,11 +2600,12 @@\n rega\n-do%0A\n+r(1)\n %0A   \n@@ -2619,13 +2619,14 @@\n   # \n-Se ti\n+se hou\n ver \n@@ -2649,21 +2649,18 @@\n ega \n-durante o uso\n+1*potencia\n %0A   \n@@ -2663,32 +2663,51 @@\n %0A            if \n+self.__bateria and \n self.__carregado\n@@ -2785,19 +2785,10 @@\n ia()\n- * tempo\n )%0A\n-%0A\n     \n@@ -2799,42 +2799,71 @@\n     \n-if self.__bateria.esta_vazia() and\n+# se n%C3%A3o h%C3%A1 bateria e n%C3%A3o h%C3%A1 carregador, desliga%0A            if\n  (no\n@@ -2871,26 +2871,23 @@\n  self.__\n-carregador\n+bateria\n  or self\n@@ -2901,25 +2901,47 @@\n ria.\n-get_carga() == 0)\n+esta_vazia()) and not self.__carregador\n :%0A  \n@@ -3032,177 +3032,50 @@\n     \n-else:%0A            # Sem bateria, apenas carregador%0A            if not self.__carregador:%0A                print(%22fail: sem energia%22)%0A                self.__lig\n+        break%0A            tempo_us\n ado \n++\n = \n-False\n+1\n %0A%0A  \n@@ -3163,20 +3163,12 @@\n t(f%22\n-Notebook u\n+U\n sa\n+n\n do p\n@@ -3188,24 +3188,82 @@\n n%22)%0A\n-%0A    def mostrar\n+        else:%0A            self.__tempo_ligado += tempo_usado%0A%0A    def show\n (sel\n@@ -3326,16 +3326,91 @@\n ligado%22%0A\n+        tempo = f%22 por %7Bself.__tempo_ligado%7D min%22 if self.__ligado else %22%22%0A\n         \n@@ -3439,16 +3439,23 @@\n %7Bstatus%7D\n+%7Btempo%7D\n %22%5D%0A     \n@@ -3505,30 +3505,20 @@\n .append(\n-f%22Carregador %7B\n+str(\n self.__c\n@@ -3526,18 +3526,17 @@\n rregador\n-%7D%22\n+)\n )%0A      \n",
            "lines": "163"
        },
        {
            "label": "2025-10-28_19-06-58",
            "content": "@@ -927,24 +927,8 @@\n eria\n-: Bateria %7C None\n  = N\n@@ -960,27 +960,8 @@\n ador\n-: Carregador %7C None\n  = N\n@@ -1005,91 +1005,317 @@\n     \n-def set_battery(self, capacidade: int):%0A        self.__bateria = Bateria(capacidade\n+# M%C3%A9todos compat%C3%ADveis com shell%0A    def turn_on(self):%0A        self.ligar()%0A%0A    def turn_off(self):%0A        self.desligar()%0A%0A    def set_battery(self, capacidade):%0A        if self.__bateria is None:%0A            self.__bateria = Bateria(capacidade)%0A        else:%0A            print(%22fail: bateria j%C3%A1 conectada%22\n )%0A%0A \n@@ -1462,24 +1462,127 @@\n ovido %7Bb%7D%22)%0A\n+            if self.__bateria is None and not self.__carregador:%0A                self.__ligado = False%0A\n             \n@@ -1624,36 +1624,16 @@\n ateria%22)\n-%0A        return None\n %0A%0A    de\n@@ -1652,37 +1652,32 @@\n r(self, potencia\n-: int\n ):%0A        if se\n@@ -1683,32 +1683,40 @@\n elf.__carregador\n+ is None\n :%0A            pr\n@@ -1717,113 +1717,112 @@\n     \n-print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia\n+self.__carregador = Carregador(potencia)%0A        else:%0A            print(%22fail: carregador j%C3%A1 conectado%22\n )%0A%0A \n@@ -1994,21 +1994,18 @@\n     \n-    return c%0A\n+else:%0A    \n     \n@@ -2042,28 +2042,39 @@\n r%22)%0A\n+%0A\n     \n-    return None%0A\n+# L%C3%B3gica de ligar/desligar\n %0A   \n@@ -2070,39 +2070,37 @@\n esligar%0A    def \n-turn_on\n+ligar\n (self):%0A        \n@@ -2128,33 +2128,33 @@\n          print(%22\n-N\n+n\n otebook j%C3%A1 ligad\n@@ -2148,16 +2148,21 @@\n book j%C3%A1 \n+est%C3%A1 \n ligado%22)\n@@ -2181,16 +2181,17 @@\n  return%0A\n+%0A\n         \n@@ -2209,24 +2209,28 @@\n bateria and \n+not \n self.__bater\n@@ -2236,23 +2236,20 @@\n ria.\n-get_carga() %3E 0\n+esta_vazia()\n ) or\n@@ -2407,32 +2407,32 @@\n %22)%0A%0A    def \n-turn_off\n+desligar\n (self):%0A    \n@@ -2552,33 +2552,33 @@\n          print(%22\n-N\n+n\n otebook j%C3%A1 desli\n@@ -2572,16 +2572,21 @@\n book j%C3%A1 \n+est%C3%A1 \n desligad\n@@ -2586,24 +2586,44 @@\n esligado%22)%0A%0A\n+    # Usar notebook%0A\n     def use(\n@@ -2625,37 +2625,32 @@\n  use(self, tempo\n-: int\n ):%0A        if no\n@@ -2735,133 +2735,273 @@\n     \n-minutos_usados = 0%0A        for _ in range(tempo):%0A            # Carrega se tiver carregador%0A            if self.__bateria and\n+tempo_restante = tempo%0A%0A        # Caso tenha bateria%0A        if self.__bateria:%0A            descarregado = self.__bateria.descarregar(tempo_restante)%0A            tempo_restante -= descarregado%0A%0A            # Se tiver carregador, carrega durante o uso%0A            if\n  sel\n@@ -3092,36 +3092,18 @@\n ia()\n-)%0A%0A            # Usa bateria\n+ * tempo)%0A\n %0A   \n@@ -3120,37 +3120,51 @@\n f self.__bateria\n+.esta_vazia()\n  and \n+(\n not self.__bater\n@@ -3158,35 +3158,61 @@\n  self.__\n-bateria.esta_vazia(\n+carregador or self.__bateria.get_carga() == 0\n ):%0A     \n@@ -3222,31 +3222,30 @@\n         \n-self.__bateria.\n+print(f%22fail: \n descarre\n@@ -3249,12 +3249,11 @@\n rreg\n-ar(1\n+ou%22\n )%0A  \n@@ -3270,52 +3270,78 @@\n     \n-minutos_usados += 1%0A            elif self.__\n+self.__ligado = False%0A        else:%0A            # Sem bateria, apenas \n carr\n@@ -3338,33 +3338,32 @@\n penas carregador\n-:\n %0A               \n@@ -3363,155 +3363,146 @@\n     \n-    minutos_usados += 1%0A            else:%0A                self.__ligado = False%0A                print(%22fail: descarregou%22)%0A                return%0A%0A\n+if not self.__carregador:%0A                print(%22fail: sem energia%22)%0A                self.__ligado = False%0A%0A        if self.__ligado:%0A    \n     \n@@ -3532,31 +3532,24 @@\n  += \n-minutos_usados%0A\n+tempo%0A  \n         \n prin\n@@ -3536,32 +3536,34 @@\n tempo%0A          \n+  \n print(f%22Notebook\n@@ -3568,89 +3568,23 @@\n ok u\n-tilizado com sucesso%22 if minutos_usados %3C tempo else f%22Usando por %7Bminutos_usados\n+sado por %7Btempo\n %7D mi\n@@ -3600,12 +3600,15 @@\n def \n-show\n+mostrar\n (sel\n@@ -3619,22 +3619,22 @@\n         \n-e\n sta\n-do\n+tus\n  = %22liga\n@@ -3639,48 +3639,9 @@\n gado\n- por %7B%7D min%22.format(self.__tempo_ligado)\n+%22\n  if \n@@ -3706,14 +3706,14 @@\n k: %7B\n-e\n sta\n-do\n+tus\n %7D%22%5D%0A\n@@ -3917,8 +3917,931 @@\n partes))\n+%0A%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A        if not line:%0A            continue%0A%0A        # imprime comando primeiro%0A        print(f%22$%7Bline%7D%22)%0A        cmd = line.split()%0A        op = cmd%5B0%5D%0A%0A        if op == %22end%22:%0A            break%0A        elif op == %22show%22:%0A            nb.show()%0A        elif op == %22turn_on%22:%0A            nb.turn_on()%0A        elif op == %22turn_off%22:%0A            nb.turn_off()%0A        elif op == %22use%22:%0A            nb.use(int(cmd%5B1%5D))%0A        elif op == %22set_battery%22:%0A            nb.set_bateria(int(cmd%5B1%5D))%0A        elif op == %22rm_battery%22:%0A            nb.rm_bateria()%0A        elif op == %22set_charger%22:%0A            nb.set_charger(int(cmd%5B1%5D))%0A        elif op == %22rm_charger%22:%0A            nb.rm_charger()%0A        else:%0A            print(%22fail: comando inv%C3%A1lido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "180"
        },
        {
            "label": "2025-10-28_19-11-11",
            "content": "@@ -142,31 +142,24 @@\n _carga(self)\n- -%3E int\n :%0A        re\n@@ -201,31 +201,24 @@\n cidade(self)\n- -%3E int\n :%0A        re\n@@ -241,34 +241,41 @@\n cidade%0A%0A    def \n-us\n+descarreg\n ar(self, tempo: \n@@ -292,178 +292,39 @@\n     \n-%22%22%22Diminui a carga da bateria, retorna quanto tempo foi poss%C3%ADvel usar.%22%22%22%0A        if self.__carga == 0:%0A            return 0%0A        tempo_usado = min(tempo, self.__carga\n+gasto = min(self.__carga, tempo\n )%0A  \n@@ -345,26 +345,20 @@\n arga -= \n-tempo_usad\n+gast\n o%0A      \n@@ -370,18 +370,12 @@\n urn \n-tempo_usad\n+gast\n o%0A%0A \n@@ -413,79 +413,8 @@\n t):%0A\n-        %22%22%22Aumenta a carga da bateria sem ultrapassar a capacidade.%22%22%22%0A\n     \n@@ -478,39 +478,42 @@\n tempo)%0A%0A    def \n-mostrar\n+esta_vazia\n (self):%0A        \n@@ -516,60 +516,32 @@\n     \n-print(f%22Bateria %7Bself.__carga%7D/%7Bself.__capacidade%7D%22)\n+return self.__carga == 0\n %0A%0A  \n@@ -739,15 +739,8 @@\n elf)\n- -%3E int\n :%0A  \n@@ -773,267 +773,8 @@\n ia%0A%0A\n-    def carregar(self, bateria: Bateria, tempo: int):%0A        %22%22%22Carrega a bateria por um tempo.%22%22%22%0A        if bateria is not None:%0A            bateria.carregar(self.__potencia * tempo)%0A%0A    def mostrar(self):%0A        print(f%22Carregador %7Bself.__potencia%7DW%22)%0A%0A\n     \n@@ -905,37 +905,8 @@\n lse%0A\n-        self.__tempo_uso = 0%0A\n     \n@@ -1003,173 +1003,283 @@\n one%0A\n-%0A\n     \n-# ---------- M%C3%A9todos de status ----------%0A    def mostrar(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        msg = f%22Notebook: %7Bstatus\n+    self.__tempo_ligado = 0%0A%0A    def set_battery(self, capacidade: int):%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_battery(self):%0A        if self.__bateria:%0A            b = self.__bateria%0A            self.__bateria = None%0A            print(f%22Removido %7Bb\n %7D%22\n+)\n %0A   \n@@ -1287,161 +1287,294 @@\n     \n-if self.__ligado:%0A            msg += f%22 por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D%22\n+    return b%0A        print(%22fail: Sem bateria%22)%0A        return None%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):\n %0A   \n@@ -1580,39 +1580,42 @@\n       if self.__\n-bateria\n+carregador\n :%0A            ms\n@@ -1616,111 +1616,181 @@\n     \n-msg += f%22, Bateria %7Bself.__bateria%7D%22%0A        print(msg)%0A%0A    # ---------- M%C3%A9todos de liga%C3%A7%C3%A3o ----------\n+c = self.__carregador%0A            self.__carregador = None%0A            print(f%22Removido %7Bc%7D%22)%0A            return c%0A        print(%22fail: Sem carregador%22)%0A        return None%0A\n %0A   \n@@ -1794,21 +1794,23 @@\n     def \n-ligar\n+turn_on\n (self):%0A\n@@ -1851,46 +1851,65 @@\n     \n-return%0A        if self.__carregador or\n+print(%22Notebook j%C3%A1 ligado%22)%0A            return%0A        if\n  (se\n@@ -1956,16 +1956,37 @@\n a() %3E 0)\n+ or self.__carregador\n :%0A      \n@@ -2122,24 +2122,24 @@\n     def \n-desligar\n+turn_off\n (self):%0A\n@@ -2242,51 +2242,65 @@\n o%22)%0A\n-%0A    # ---------- M%C3%A9todos de uso ----------\n+        else:%0A            print(%22Notebook j%C3%A1 desligado%22)%0A\n %0A   \n@@ -2306,18 +2306,17 @@\n   def us\n-ar\n+e\n (self, t\n@@ -2426,251 +2426,104 @@\n     \n-# Se tiver apenas carregador, s%C3%B3 soma o tempo%0A        if self.__carregador and not self.__bateria:%0A            self.__tempo_uso += tempo%0A            print(%22Notebook utilizado com sucesso%22)%0A            return%0A%0A        # Se tiver apenas bateria%0A\n+minutos_usados = 0%0A        for _ in range(tempo):%0A            # Carrega se tiver carregador%0A    \n     \n@@ -2548,20 +2548,16 @@\n ria and \n-not \n self.__c\n@@ -2583,15 +2583,11 @@\n     \n-usado =\n+   \n  sel\n@@ -2602,229 +2602,82 @@\n ria.\n-usar(tempo)%0A            self.__tempo_uso += usado%0A            if usado %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A            return%0A%0A        # Se tiver bateria e carregador%0A\n+carregar(self.__carregador.get_potencia())%0A%0A            # Usa bateria%0A    \n     \n@@ -2706,279 +2706,137 @@\n and \n+not \n self.__\n-carregador:%0A            self.__tempo_uso += tempo%0A            self.__carregador.carregar(self.__bateria, tempo)%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A    # ---------- M%C3%A9todos de conex%C3%A3o ----------%0A    def set_bateria(self, capacidade: int):%0A\n+bateria.esta_vazia():%0A                self.__bateria.descarregar(1)%0A                minutos_usados += 1%0A      \n       \n-  \n+el\n if s\n@@ -2845,76 +2845,55 @@\n f.__\n-bateria is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)\n+carregador:%0A                minutos_usados += 1\n %0A   \n@@ -2897,39 +2897,43 @@\n             \n-return%0A\n+else:%0A     \n         \n self.__bater\n@@ -2924,111 +2924,49 @@\n     \n+   \n self.__\n-bateria = Bateria(capacidade)%0A%0A    def rm_bateria(self):%0A        if not self.__bateria:%0A\n+ligado = False%0A        \n         \n     \n@@ -2953,36 +2953,32 @@\n                 \n-    \n print(%22fail: Sem\n@@ -2978,137 +2978,74 @@\n il: \n-Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        self._\n+descarregou%22)%0A                return%0A%0A        self.__tempo\n _ligado \n = Fa\n@@ -3044,674 +3044,281 @@\n ado \n++\n = \n-False%0A%0A    def set_carregador(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_carregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A            self.__ligado = False%0A%0A%0A# ---------------------- TESTES ----------------------%0A%0Aif __name__ == %22__main__%22:%0A    nb = Notebook()%0A%0A    # Teste inicial%0A    nb.mostrar()  # \n+minutos_usados%0A        print(f%22Notebook utilizado com sucesso%22 if minutos_usados %3C tempo else f%22Usando por %7Bminutos_usados%7D min%22)%0A%0A    def show(self):%0A        estado = %22ligado por %7B%7D min%22.format(self.__tempo_ligado) if self.__ligado else %22desligado%22%0A        partes = %5Bf%22\n Note\n@@ -3327,143 +3327,95 @@\n ok: \n-desligado%0A    nb.ligar()    # fail: n%C3%A3o foi poss%C3%ADvel ligar%0A    nb.usar(5)    # fail: desligado%0A%0A    # Adicionando carregador%0A    nb.set\n+%7Bestado%7D%22%5D%0A        if self.__carregador:%0A            partes.append(f%22Carregador %7Bself._\n _car\n@@ -3425,245 +3425,90 @@\n ador\n-(2\n+%7D%22\n )%0A    \n-nb.mostrar()%0A    nb.ligar()%0A    nb.mostrar()%0A    nb.usar(5)%0A    nb.mostrar()%0A    nb.usar(7)%0A    nb.mostrar()%0A    nb.desligar()%0A    nb.mostrar()%0A%0A    print(%22%5Cn--- Novo teste com bateria ---%22)%0A    nb = Notebook()%0A    nb.set\n+    if self.__bateria:%0A            partes.append(f%22Bateria %7Bself._\n _bateria\n (50)\n@@ -3507,140 +3507,40 @@\n eria\n-(50\n+%7D%22\n )%0A    \n-nb.mostrar()%0A    nb.ligar()%0A    nb.usar(5)%0A    nb.mostrar()%0A    nb.usar(10)%0A    nb.mostrar()%0A    nb.desligar()%0A    nb.mostrar(\n+    print(%22, %22.join(partes)\n )\n",
            "lines": "121"
        },
        {
            "label": "2025-10-28_19-12-07",
            "content": "@@ -279,32 +279,114 @@\n f, tempo: int):%0A\n+        %22%22%22Diminui a carga da bateria, retorna quanto tempo foi poss%C3%ADvel usar.%22%22%22%0A\n         if self.\n@@ -554,26 +554,21 @@\n r(self, \n-quantidade\n+tempo\n : int):%0A\n@@ -579,71 +579,222 @@\n     \n-self.__carga = min(self.__capacidade, self.__carga + quant\n+%22%22%22Aumenta a carga da bateria sem ultrapassar a capacidade.%22%22%22%0A        self.__carga = min(self.__capacidade, self.__carga + tempo)%0A%0A    def mostrar(self):%0A        print(f%22Bateria %7Bself.__carga%7D/%7Bself.__capac\n idade\n+%7D%22\n )%0A%0A \n@@ -1066,17 +1066,15 @@\n ia: \n-'\n Bateria\n-'\n , te\n@@ -1096,72 +1096,202 @@\n     \n-if bateria:%0A            bateria.carregar(self.__potencia * tempo\n+%22%22%22Carrega a bateria por um tempo.%22%22%22%0A        if bateria is not None:%0A            bateria.carregar(self.__potencia * tempo)%0A%0A    def mostrar(self):%0A        print(f%22Carregador %7Bself.__potencia%7DW%22\n )%0A%0A \n@@ -1549,16 +1549,62 @@\n = None%0A%0A\n+    # ---------- M%C3%A9todos de status ----------%0A\n     def \n@@ -1806,140 +1806,8 @@\n  if \n-self.__carregador and self.__bateria:%0A            msg += f%22, Carregador %7Bself.__carregador%7D, Bateria %7Bself.__bateria%7D%22%0A        elif \n self\n@@ -1884,18 +1884,16 @@\n         \n-el\n if self.\n@@ -1972,16 +1972,63 @@\n t(msg)%0A%0A\n+    # ---------- M%C3%A9todos de liga%C3%A7%C3%A3o ----------%0A\n     def \n@@ -2096,16 +2096,37 @@\n      if \n+self.__carregador or \n (self.__\n@@ -2172,29 +2172,8 @@\n %3E 0)\n- or self.__carregador\n :%0A  \n@@ -2426,24 +2426,67 @@\n esligado%22)%0A%0A\n+    # ---------- M%C3%A9todos de uso ----------%0A\n     def usar\n@@ -2606,21 +2606,51 @@\n   # \n-s%C3%B3 carregador\n+Se tiver apenas carregador, s%C3%B3 soma o tempo\n %0A   \n@@ -2819,18 +2819,31 @@\n       # \n+Se tiver apena\n s\n-%C3%B3\n  bateria\n@@ -3121,16 +3121,25 @@\n        #\n+ Se tiver\n  bateria\n@@ -3350,24 +3350,71 @@\n  sucesso%22)%0A%0A\n+    # ---------- M%C3%A9todos de conex%C3%A3o ----------%0A\n     def set_\n@@ -3462,32 +3462,44 @@\n f self.__bateria\n+ is not None\n :%0A            pr\n@@ -3882,32 +3882,44 @@\n elf.__carregador\n+ is not None\n :%0A            pr\n@@ -4336,88 +4336,87 @@\n %0A%0A# \n-==================== SHELL (testes autom%C3%A1ticos) ====================%0A%0Adef \n+---------------------- TESTES ----------------------%0A%0Aif __name__ == %22__\n main\n-()\n+__%22\n :%0A  \n@@ -4442,246 +4442,236 @@\n     \n-while True:%0A        try:%0A            line = input().strip\n+# Teste inicial%0A    nb.mostrar()  # Notebook: desligado%0A    nb.ligar\n ()\n-%0A\n     \n-    except EOFError:%0A            break%0A%0A        if line == %22$end%22:%0A            break%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22$show%22:%0A        \n+# fail: n%C3%A3o foi poss%C3%ADvel ligar%0A    nb.usar(5)    # fail: desligado%0A%0A    # Adicionando carregador%0A    nb.set_carregador(2)%0A    nb.mostrar()%0A    nb.ligar()%0A\n     \n@@ -4687,574 +4687,324 @@\n r()%0A\n-%0A\n     \n-    elif cmd == %22$turn_on%22:%0A            nb.lig\n+nb.usar(5)%0A    nb.mostrar()%0A    nb.us\n ar(\n+7\n )%0A\n-%0A\n     \n-    elif cmd == %22$turn_off%22:%0A            nb.desligar()%0A%0A        elif cmd == %22$use%22:%0A            nb.usar(int(parts%5B1%5D))%0A%0A        elif cmd == %22$set_\n+nb.mostrar()%0A    nb.desligar()%0A    nb.mostrar()%0A%0A    print(%22%5Cn--- Novo teste com \n bat\n-t\n er\n-y%22:%0A            nb.set_bateria(int(parts%5B1%5D))%0A%0A        elif cmd == %22$rm_battery%22:%0A            nb.rm_bateria\n+ia ---%22)%0A    nb = Notebook()%0A    nb.set_bateria(50)%0A    nb.mostrar()%0A    nb.ligar\n ()%0A\n-%0A\n     \n-    elif cmd == %22$set_charger%22:%0A            nb.set_carregador(int(parts%5B1%5D))%0A%0A        elif cmd == %22$rm_charger%22:%0A            nb.rm_carregado\n+nb.usar(5)%0A    nb.mostrar()%0A    nb.usar(10)%0A    nb.mostra\n r()%0A\n-%0A  \n     \n-  else:%0A            print(%22fail: comando inv%C3%A1lido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main\n+nb.desligar()%0A    nb.mostrar\n ()\n",
            "lines": "175"
        },
        {
            "label": "2025-10-28_19-13-13",
            "content": "@@ -6,2923 +6,4565 @@\n  Bat\n-tery:%0A    def __init__(self, max_charge: int):%0A        self.max_charge = max_charge%0A        self.charge = max_charge%0A%0A    def use(self, value: int):%0A        if self.charge == 0:%0A            print(%22fail: bateria vazia%22)%0A            return False%0A        if self.charge %3C value:%0A            print(%22fail: bateria insuficiente%22)%0A            return False%0A        self.charge -= value%0A        return True%0A%0A    def recharge(self):%0A        self.charge = self.max_charge%0A%0A    def __str__(self):%0A        return f%22Bateria: %7Bself.charge%7D/%7Bself.max_charge%7D%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.on = False%0A        self.battery = None%0A        self.charger = None%0A%0A    def set_bateria(self, capacidade: int):%0A        self.battery = Battery(capacidade)%0A%0A    def rm_bateria(self):%0A        if self.battery is None:%0A            print(%22fail: sem bateria%22)%0A        else:%0A            self.battery = None%0A%0A    def set_carregador(self, capacidade: int):%0A        self.charger = Battery(capacidade)%0A%0A    def rm_carregador(self):%0A        if self.charger is None:%0A            print(%22fail: sem carregador%22)%0A        else:%0A            self.charger = None%0A%0A    def ligar(self):%0A        if self.battery is None:%0A            print(%22fail: sem bateria%22)%0A            return%0A        if self.battery.charge == 0:%0A            print(%22fail: bateria vazia%22)%0A            return%0A        self.on = True%0A        print(%22Notebook ligado%22)%0A%0A    def desligar(self):%0A        if not self.on:%0A            print(%22fail: notebook j%C3%A1 est%C3%A1 desligado%22)%0A            return%0A        self.on = False%0A        print(%22Notebook desligado%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.on:%0A            print(%22fail: notebook desligado%22)%0A            return%0A        if self.battery is None:%0A            print(%22fail: sem bateria%22)%0A            return%0A        if not self.battery.use(tempo):%0A            return%0A        print(f%22Notebook usado por %7Btempo%7D minutos%22)%0A%0A    def mostrar(self):%0A        estado = %22ligado%22 if self.on else %22desligado%22%0A        if self.battery:%0A            print(f%22Notebook: %7Bestado%7D, %7Bself.battery%7D%22)%0A        else:%0A            print(f%22Notebook: %7Bestado%7D%22)%0A%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A%0A        if not line:%0A            continue%0A%0A        # Remove o s%C3%ADmbolo $ se existir%0A        if line.startswith(%22$%22):%0A            line = line%5B1:%5D.strip()%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A%0A        elif cmd == %22show%22:%0A            nb.mostrar()%0A%0A        elif cmd == %22turn_on%22:%0A            nb.ligar()%0A%0A        elif cmd == %22turn_off%22:%0A            nb.desligar()%0A%0A        elif cmd == %22use%22:%0A            nb.usar(int(parts%5B1%5D))%0A%0A        elif cmd == %22set_battery%22:%0A            nb.set_bateria(int(parts%5B1%5D))%0A%0A        elif cmd == %22rm_battery%22:%0A            nb.rm_bateria()%0A%0A        elif cmd == %22\n+eria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade = capacidade%0A        self.__carga = capacidade%0A%0A    def get_carga(self) -%3E int:%0A        return self.__carga%0A%0A    def get_capacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def usar(self, tempo: int):%0A        if self.__carga == 0:%0A            return 0%0A        tempo_usado = min(tempo, self.__carga)%0A        self.__carga -= tempo_usado%0A        return tempo_usado%0A%0A    def carregar(self, quantidade: int):%0A        self.__carga = min(self.__capacidade, self.__carga + quantidade)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self) -%3E int:%0A        return self.__potencia%0A%0A    def carregar(self, bateria: 'Bateria', tempo: int):%0A        if bateria:%0A            bateria.carregar(self.__potencia * tempo)%0A%0A    def __str__(self):%0A        return f%22%7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado = False%0A        self.__tempo_uso = 0%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    def mostrar(self):%0A        status = %22ligado%22 if self.__ligado else %22desligado%22%0A        msg = f%22Notebook: %7Bstatus%7D%22%0A        if self.__ligado:%0A            msg += f%22 por %7Bself.__tempo_uso%7D min%22%0A%0A        if self.__carregador and self.__bateria:%0A            msg += f%22, Carregador %7Bself.__carregador%7D, Bateria %7Bself.__bateria%7D%22%0A        elif self.__carregador:%0A            msg += f%22, Carregador %7Bself.__carregador%7D%22%0A        elif self.__bateria:%0A            msg += f%22, Bateria %7Bself.__bateria%7D%22%0A        print(msg)%0A%0A    def ligar(self):%0A        if self.__ligado:%0A            return%0A        if (self.__bateria and self.__bateria.get_carga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A            print(%22Notebook ligado%22)%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22Notebook desligado%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        # s%C3%B3 carregador%0A        if self.__carregador and not self.__bateria:%0A            self.__tempo_uso += tempo%0A            print(%22Notebook utilizado com sucesso%22)%0A            return%0A%0A        # s%C3%B3 bateria%0A        if self.__bateria and not self.__carregador:%0A            usado = self.__bateria.usar(tempo)%0A            self.__tempo_uso += usado%0A            if usado %3C tempo:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A            return%0A%0A        # bateria e carregador%0A        if self.__bateria and self.__carregador:%0A            self.__tempo_uso += tempo%0A            self.__carregador.carregar(self.__bateria, tempo)%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A    def set_bateria(self, capacidade: int):%0A        if self.__bateria:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return%0A        self.__bateria = Bateria(capacidade)%0A%0A    def rm_bateria(self):%0A        if not self.__bateria:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria%7D%22)%0A        self.__bateria = None%0A        self.__ligado = False%0A%0A    def set_carregador(self, potencia: int):%0A        if self.__carregador:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_carregador(self):%0A        if not self.__carregador:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador%7D%22)%0A        self.__carregador = None%0A        if not self.__bateria or self.__bateria.get_carga() == 0:%0A            self.__ligado = False%0A%0A%0A# ==================== SHELL (testes autom%C3%A1ticos) ====================%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A%0A        if line == %22$end%22:%0A            break%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22$show%22:%0A            nb.mostrar()%0A%0A        elif cmd == %22$turn_on%22:%0A            nb.ligar()%0A%0A        elif cmd == %22$turn_off%22:%0A            nb.desligar()%0A%0A        elif cmd == %22$use%22:%0A            nb.usar(int(parts%5B1%5D))%0A%0A        elif cmd == %22$set_battery%22:%0A            nb.set_bateria(int(parts%5B1%5D))%0A%0A        elif cmd == %22$rm_battery%22:%0A            nb.rm_bateria()%0A%0A        elif cmd == %22$\n set_\n@@ -4640,16 +4640,17 @@\n cmd == %22\n+$\n rm_charg\n",
            "lines": "178"
        },
        {
            "label": "2025-10-28_19-14-53",
            "content": "@@ -2321,73 +2321,8 @@\n ue%0A%0A\n-        print(line)  # %3C%3C%3C imprime o comando digitado (com o $)%0A%0A\n     \n",
            "lines": "134"
        },
        {
            "label": "2025-10-28_19-15-49",
            "content": "@@ -1497,14 +1497,14 @@\n ok j\n-%EC%B9%98\n+%C3%A1\n  est\n-%EC%B9%98\n+%C3%A1\n  des\n@@ -2339,16 +2339,20 @@\n line)  #\n+ %3C%3C%3C\n  imprime\n@@ -2366,28 +2366,8 @@\n ndo \n-exatamente como foi \n digi\n@@ -2396,42 +2396,36 @@\n   # \n-s%EC%B9%A9 depois remove o $ para processa\n+Remove o s%C3%ADmbolo $ se existi\n r%0A  \n@@ -3162,17 +3162,17 @@\n  inv\n-%EC%B9%98\n+%C3%A1\n lido%22)%0A%0A\n if _\n@@ -3167,16 +3167,17 @@\n lido%22)%0A%0A\n+%0A\n if __nam\n",
            "lines": "136"
        },
        {
            "label": "2025-10-28_19-17-49",
            "content": "@@ -1497,14 +1497,14 @@\n ok j\n-%C3%A1\n+%EC%B9%98\n  est\n-%C3%A1\n+%EC%B9%98\n  des\n@@ -2329,17 +2329,40 @@\n     \n-# imprime\n+print(line)  # imprime o comando\n  exa\n@@ -2373,22 +2373,16 @@\n nte \n-o \n com\n-ando como\n+o foi\n  dig\n@@ -2397,24 +2397,25 @@\n om o $)%0A\n+%0A\n         \n print(li\n@@ -2410,30 +2410,19 @@\n     \n-print(line)%0A%0A        #\n+# s%EC%B9%A9 depois\n  rem\n@@ -2443,26 +2443,16 @@\n rocessar\n- o comando\n %0A       \n@@ -3184,17 +3184,17 @@\n  inv\n-%C3%A1\n+%EC%B9%98\n lido%22)%0A%0A\n %0Aif \n@@ -3189,17 +3189,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n",
            "lines": "135"
        },
        {
            "label": "2025-10-28_19-20-12",
            "content": "@@ -1497,14 +1497,14 @@\n ok j\n-%EC%B9%98\n+%C3%A1\n  est\n-%EC%B9%98\n+%C3%A1\n  des\n@@ -2207,25 +2207,16 @@\n         \n-original_\n line = i\n@@ -2233,37 +2233,8 @@\n ip()\n-  # guarda o comando original\n %0A   \n@@ -2289,25 +2289,16 @@\n  if not \n-original_\n line:%0A  \n@@ -2339,18 +2339,18 @@\n ime \n-EXATAMENTE\n+exatamente\n  o c\n@@ -2356,16 +2356,21 @@\n comando \n+como \n digitado\n@@ -2375,16 +2375,18 @@\n do (com \n+o \n $)%0A     \n@@ -2394,25 +2394,16 @@\n   print(\n-original_\n line)%0A%0A \n@@ -2426,68 +2426,32 @@\n o $ \n-apenas da c%EC%B9%A9pia, para processar%0A        line = original_line\n+para processar o comando\n %0A   \n@@ -3187,9 +3187,9 @@\n  inv\n-%EC%B9%98\n+%C3%A1\n lido\n",
            "lines": "137"
        },
        {
            "label": "2025-10-28_19-22-10",
            "content": "@@ -27,32 +27,34 @@\n nit__(self, \n-capacity\n+max_charge\n : int):%0A    \n@@ -66,27 +66,31 @@\n elf.\n-capacity = capacity\n+max_charge = max_charge\n %0A   \n@@ -108,24 +108,26 @@\n harge = \n-capacity\n+max_charge\n %0A%0A    de\n@@ -130,35 +130,36 @@\n   def use(self, \n-tim\n+valu\n e: int):%0A       \n@@ -155,36 +155,8 @@\n t):%0A\n-        self.charge -= time%0A\n     \n@@ -174,17 +174,18 @@\n .charge \n-%3C\n+==\n  0:%0A    \n@@ -196,332 +196,278 @@\n     \n-self.charge = 0%0A%0A    def charge_up(self, amount: int):%0A        self.charge += amount%0A        if self.charge %3E self.capacity:%0A            self.charge = self.capacity%0A%0A    def __str__(self):%0A        return f%22Bateria %7Bself.charge%7D/%7Bself.capacity%7D%22%0A%0A%0Aclass Charger:%0A    def __init__(self, power: int):%0A        self.power = power\n+print(%22fail: bateria vazia%22)%0A            return False%0A        if self.charge %3C value:%0A            print(%22fail: bateria insuficiente%22)%0A            return False%0A        self.charge -= value%0A        return True%0A%0A    def recharge(self):%0A        self.charge = self.max_charge\n %0A%0A  \n@@ -508,32 +508,48 @@\n n f%22\n-Carregador %7Bself.power%7DW\n+Bateria: %7Bself.charge%7D/%7Bself.max_charge%7D\n %22%0A%0A%0A\n@@ -616,33 +616,8 @@\n lse%0A\n-        self.time_on = 0%0A\n     \n@@ -673,62 +673,8 @@\n ne%0A%0A\n-    # ----------------- COMPONENTES -----------------%0A\n     \n@@ -680,28 +680,28 @@\n  def set_bat\n-t\n er\n-y\n+ia\n (self, capac\n@@ -705,121 +705,19 @@\n paci\n-ty: int):%0A        if self.battery is not None:%0A            print(%22fail: bateria j%C3%A1 conectada%22)%0A            return\n+dade: int):\n %0A   \n@@ -750,18 +750,20 @@\n y(capaci\n-ty\n+dade\n )%0A%0A    d\n@@ -771,20 +771,20 @@\n f rm_bat\n-t\n er\n-y\n+ia\n (self):%0A\n@@ -841,17 +841,17 @@\n (%22fail: \n-S\n+s\n em bater\n@@ -867,91 +867,93 @@\n     \n-    return%0A        print(f%22Removido %7Bself.battery.charge%7D/%7Bself.battery.capacity%7D%22)\n+else:%0A            self.battery = None%0A%0A    def set_carregador(self, capacidade: int):\n %0A   \n@@ -966,46 +966,37 @@\n elf.\n-batt\n+charg\n er\n-y\n  = \n-None%0A        self.on = False\n+Battery(capacidade)\n %0A%0A  \n@@ -1005,36 +1005,26 @@\n def \n-set\n+rm\n _c\n-h\n ar\n-ger(self, power: int\n+regador(self\n ):%0A \n@@ -1049,20 +1049,16 @@\n rger is \n-not \n None:%0A  \n@@ -1079,16 +1079,20 @@\n t(%22fail:\n+ sem\n  carrega\n@@ -1098,43 +1098,29 @@\n ador\n- j%C3%A1 conectado%22)%0A            return%0A\n+%22)%0A        else:%0A    \n     \n@@ -1142,22 +1142,12 @@\n r = \n-Charger(power)\n+None\n %0A%0A  \n@@ -1152,25 +1152,20 @@\n     def \n-rm_charge\n+liga\n r(self):\n@@ -1173,39 +1173,39 @@\n         if self.\n-charg\n+batt\n er\n+y\n  is None:%0A      \n@@ -1227,22 +1227,19 @@\n il: \n-Sem carregador\n+sem bateria\n %22)%0A \n@@ -1268,212 +1268,96 @@\n     \n-print(f%22Removido %7Bself.charger.power%7DW%22)%0A        self.charger = None%0A        if self.\n+if self.battery.charge == 0:%0A            print(%22fail: \n bat\n-t\n er\n-y is None:%0A            self.on = False%0A%0A    # ----------------- CONTROLE -----------------%0A    def turn_on(self):\n+ia vazia%22)%0A            return\n %0A   \n@@ -1365,108 +1365,79 @@\n     \n-if \n self.on\n-:%0A            return%0A        if (self.battery and self.battery.charge %3E 0) or self.charger\n+ = True%0A        print(%22Notebook ligado%22)%0A%0A    def desligar(self)\n :%0A  \n@@ -1438,35 +1438,38 @@\n f):%0A        \n-   \n+if not\n  self.on\n  = True%0A    \n@@ -1460,28 +1460,8 @@\n f.on\n- = True%0A        else\n :%0A  \n@@ -1488,56 +1488,54 @@\n l: n\n-%C3%A3o foi poss%C3%ADvel \n+otebook j%EC%B9%98 est%EC%B9%98 des\n liga\n-r\n+do\n %22)%0A\n-%0A\n     \n-def turn_off(self):\n+        return\n %0A   \n@@ -1554,16 +1554,52 @@\n  = False\n+%0A        print(%22Notebook desligado%22)\n %0A%0A    de\n@@ -1606,17 +1606,18 @@\n f us\n-e\n+ar\n (self, t\n ime:\n@@ -1612,19 +1612,20 @@\n (self, t\n-ime\n+empo\n : int):%0A\n@@ -1668,24 +1668,33 @@\n print(%22fail:\n+ notebook\n  desligado%22)\n@@ -1713,17 +1713,16 @@\n  return%0A\n-%0A\n         \n@@ -1741,61 +1741,53 @@\n ery \n-and not self.charger:%0A            # usando s%C3%B3\n+is None:%0A            print(%22fail: sem\n  bateria\n %0A   \n@@ -1782,16 +1782,18 @@\n  bateria\n+%22)\n %0A       \n@@ -1801,167 +1801,54 @@\n     \n-if self.battery.charge %3C time:%0A                print(%22fail: descarregou%22)%0A                self.battery.use(self.battery.charge)%0A                self.on = False\n+return%0A        if not self.battery.use(tempo):\n %0A   \n@@ -1848,36 +1848,32 @@\n o):%0A            \n-    \n return%0A         \n@@ -1875,125 +1875,130 @@\n     \n-    self.battery.use(time)%0A%0A        elif self.charger and self.battery:%0A            # usando com bateria e carre\n+print(f%22Notebook usado por %7Btempo%7D minutos%22)%0A%0A    def mostrar(self):%0A        estado = %22ligado%22 if self.on else %22desli\n gado\n-r\n+%22\n %0A   \n@@ -1994,35 +1994,34 @@\n ligado%22%0A        \n-   \n+if\n  self.battery.ch\n@@ -2021,81 +2021,51 @@\n tery\n-.charge_up(self.charger.power * time)%0A%0A        elif self.charger and not \n+:%0A            print(f%22Notebook: %7Bestado%7D, %7B\n self\n@@ -2064,33 +2064,35 @@\n %7D, %7Bself.battery\n-:\n+%7D%22)\n %0A            # u\n@@ -2088,1366 +2088,1193 @@\n     \n-    # usando s%C3%B3 carregador%0A            pass%0A%0A        self.time_on += time%0A%0A    # ----------------- STATUS -----------------%0A    def __str__(self):%0A        parts = %5B%5D%0A        if self.on:%0A            parts.append(f%22Notebook: ligado por %7Bself.time_on%7D min%22)%0A        else:%0A            parts.append(%22Notebook: desligado%22)%0A        if self.charger:%0A            parts.append(str(self.charger))%0A        if self.battery:%0A            parts.append(str(self.battery))%0A        return %22, %22.join(parts)%0A%0A%0A# ----------------- SHELL -----------------%0Adef main():%0A    note = Notebook()%0A%0A    while True:%0A        try:%0A            cmd = input().strip().split()%0A        except EOFError:%0A            break%0A        if not cmd:%0A            continue%0A%0A        if cmd%5B0%5D == %22end%22:%0A            break%0A        elif cmd%5B0%5D == %22show%22:%0A            print(note)%0A        elif cmd%5B0%5D == %22set_battery%22:%0A            note.set_battery(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22rm_battery%22:%0A            note.rm_battery()%0A        elif cmd%5B0%5D == %22set_charger%22:%0A            note.set_charger(int(cmd%5B1%5D))%0A        elif cmd%5B0%5D == %22rm_charger%22:%0A            note.rm_charger()%0A        elif cmd%5B0%5D == %22turn_on%22:%0A            note.turn_on()%0A        elif cmd%5B0%5D == %22turn_off%22:%0A            note.turn_off()%0A        elif cmd%5B0%5D == %22use%22:%0A            note.use(int(cmd%5B1%5D))%0A        else:%0A            print(%22fail: comando inv%C3%A1\n+else:%0A            print(f%22Notebook: %7Bestado%7D%22)%0A%0A%0Adef main():%0A    nb = Notebook()%0A%0A    while True:%0A        try:%0A            original_line = input().strip()  # guarda o comando original%0A        except EOFError:%0A            break%0A%0A        if not original_line:%0A            continue%0A%0A        # imprime EXATAMENTE o comando digitado (com $)%0A        print(original_line)%0A%0A        # remove o $ apenas da c%EC%B9%A9pia, para processar%0A        line = original_line%0A        if line.startswith(%22$%22):%0A            line = line%5B1:%5D.strip()%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd == %22end%22:%0A            break%0A%0A        elif cmd == %22show%22:%0A            nb.mostrar()%0A%0A        elif cmd == %22turn_on%22:%0A            nb.ligar()%0A%0A        elif cmd == %22turn_off%22:%0A            nb.desligar()%0A%0A        elif cmd == %22use%22:%0A            nb.usar(int(parts%5B1%5D))%0A%0A        elif cmd == %22set_battery%22:%0A            nb.set_bateria(int(parts%5B1%5D))%0A%0A        elif cmd == %22rm_battery%22:%0A            nb.rm_bateria()%0A%0A        elif cmd == %22set_charger%22:%0A            nb.set_carregador(int(parts%5B1%5D))%0A%0A        elif cmd == %22rm_charger%22:%0A            nb.rm_carregador()%0A%0A        else:%0A            print(%22fail: comando inv%EC%B9%98\n lido\n",
            "lines": "138"
        },
        {
            "label": "2025-10-28_19-26-01",
            "content": "@@ -3242,20 +3242,19 @@\n         \n-line\n+cmd\n  = input\n@@ -3263,16 +3263,24 @@\n .strip()\n+.split()\n %0A       \n@@ -3330,20 +3330,19 @@\n  if not \n-line\n+cmd\n :%0A      \n@@ -3361,118 +3361,8 @@\n ue%0A%0A\n-        print(f%22$%7Bline%7D%22)  # %3C-- imprime o comando exatamente como QxCode espera%0A%0A        cmd = line.split()%0A%0A\n     \n@@ -3999,16 +3999,17 @@\n lido%22)%0A%0A\n+%0A\n if __nam\n",
            "lines": "150"
        },
        {
            "label": "2025-10-28_19-26-53",
            "content": "@@ -2119,37 +2119,8 @@\n rn%0A%0A\n-        # --- s%C3%B3 bateria ---%0A\n     \n@@ -2153,32 +2153,64 @@\n t self.charger:%0A\n+            # usando s%C3%B3 bateria%0A\n             if s\n@@ -2283,84 +2283,8 @@\n u%22)%0A\n-                self.time_on += self.battery.charge  # usa s%C3%B3 o que restava%0A\n     \n@@ -2392,30 +2392,8 @@\n urn%0A\n-            else:%0A    \n     \n@@ -2419,32 +2419,33 @@\n y.use(time)%0A\n+%0A\n         \n         self\n@@ -2436,74 +2436,68 @@\n     \n-        self.time_on += time%0A                return%0A%0A        # ---\n+elif self.charger and self.battery:%0A            # usando com\n  bat\n@@ -2501,17 +2501,17 @@\n bateria \n-+\n+e\n  carrega\n@@ -2517,54 +2517,8 @@\n ador\n- ---%0A        if self.battery and self.charger:\n %0A   \n@@ -2576,24 +2576,25 @@\n * time)%0A\n+%0A\n         \n     self\n@@ -2589,66 +2589,68 @@\n     \n-    self.time_on += time%0A            return%0A%0A        # ---\n+elif self.charger and not self.battery:%0A            # usando\n  s%C3%B3 \n@@ -2659,20 +2659,16 @@\n rregador\n- ---\n %0A       \n@@ -2668,37 +2668,26 @@\n         \n-if self.charger:%0A    \n+    pass%0A%0A\n         \n@@ -2706,35 +2706,16 @@\n  += time\n-%0A            return\n %0A%0A    # \n@@ -3379,16 +3379,20 @@\n ne%7D%22)  #\n+ %3C--\n  imprime\n@@ -3405,18 +3405,24 @@\n ando\n-, conforme\n+ exatamente como\n  QxC\n@@ -3432,16 +3432,17 @@\n  espera%0A\n+%0A\n         \n@@ -4103,17 +4103,16 @@\n lido%22)%0A%0A\n-%0A\n if __nam\n@@ -4140,9 +4140,8 @@\n   main()\n-%0A\n",
            "lines": "153"
        },
        {
            "label": "2025-10-28_19-27-57",
            "content": "@@ -2237,71 +2237,8 @@\n me:%0A\n-                # descarregou antes de completar o tempo total%0A\n     \n@@ -2327,16 +2327,40 @@\n y.charge\n+  # usa s%C3%B3 o que restava\n %0A       \n@@ -4303,12 +4303,13 @@\n :%0A    main()\n+%0A\n",
            "lines": "158"
        },
        {
            "label": "2025-10-28_19-29-30",
            "content": "@@ -2255,37 +2255,95 @@\n   # \n-s%C3%B3 usa o que resta da bateria\n+descarregou antes de completar o tempo total%0A                print(%22fail: descarregou%22)\n %0A   \n@@ -2481,51 +2481,8 @@\n lse%0A\n-                print(%22fail: descarregou%22)%0A\n     \n",
            "lines": "159"
        },
        {
            "label": "2025-10-28_19-30-32",
            "content": "class Battery:\n    def __init__(self, capacity: int):\n        self.capacity = capacity\n        self.charge = capacity\n\n    def use(self, time: int):\n        self.charge -= time\n        if self.charge < 0:\n            self.charge = 0\n\n    def charge_up(self, amount: int):\n        self.charge += amount\n        if self.charge > self.capacity:\n            self.charge = self.capacity\n\n    def __str__(self):\n        return f\"Bateria {self.charge}/{self.capacity}\"\n\n\nclass Charger:\n    def __init__(self, power: int):\n        self.power = power\n\n    def __str__(self):\n        return f\"Carregador {self.power}W\"\n\n\nclass Notebook:\n    def __init__(self):\n        self.on = False\n        self.time_on = 0\n        self.battery = None\n        self.charger = None\n\n    # ----------------- COMPONENTES -----------------\n    def set_battery(self, capacity: int):\n        if self.battery is not None:\n            print(\"fail: bateria j\u00e1 conectada\")\n            return\n        self.battery = Battery(capacity)\n\n    def rm_battery(self):\n        if self.battery is None:\n            print(\"fail: Sem bateria\")\n            return\n        print(f\"Removido {self.battery.charge}/{self.battery.capacity}\")\n        self.battery = None\n        self.on = False\n\n    def set_charger(self, power: int):\n        if self.charger is not None:\n            print(\"fail: carregador j\u00e1 conectado\")\n            return\n        self.charger = Charger(power)\n\n    def rm_charger(self):\n        if self.charger is None:\n            print(\"fail: Sem carregador\")\n            return\n        print(f\"Removido {self.charger.power}W\")\n        self.charger = None\n        if self.battery is None:\n            self.on = False\n\n    # ----------------- CONTROLE -----------------\n    def turn_on(self):\n        if self.on:\n            return\n        if (self.battery and self.battery.charge > 0) or self.charger:\n            self.on = True\n        else:\n            print(\"fail: n\u00e3o foi poss\u00edvel ligar\")\n\n    def turn_off(self):\n        self.on = False\n\n    def use(self, time: int):\n        if not self.on:\n            print(\"fail: desligado\")\n            return\n\n        # --- s\u00f3 bateria ---\n        if self.battery and not self.charger:\n            if self.battery.charge < time:\n                # s\u00f3 usa o que resta da bateria\n                self.time_on += self.battery.charge\n                self.battery.use(self.battery.charge)\n                self.on = False\n                print(\"fail: descarregou\")\n                return\n            else:\n                self.battery.use(time)\n                self.time_on += time\n                return\n\n        # --- bateria + carregador ---\n        if self.battery and self.charger:\n            self.battery.charge_up(self.charger.power * time)\n            self.time_on += time\n            return\n\n        # --- s\u00f3 carregador ---\n        if self.charger:\n            self.time_on += time\n            return\n\n    # ----------------- STATUS -----------------\n    def __str__(self):\n        parts = []\n        if self.on:\n            parts.append(f\"Notebook: ligado por {self.time_on} min\")\n        else:\n            parts.append(\"Notebook: desligado\")\n        if self.charger:\n            parts.append(str(self.charger))\n        if self.battery:\n            parts.append(str(self.battery))\n        return \", \".join(parts)\n\n\n# ----------------- SHELL -----------------\ndef main():\n    note = Notebook()\n\n    while True:\n        try:\n            line = input().strip()\n        except EOFError:\n            break\n        if not line:\n            continue\n\n        print(f\"${line}\")  # imprime o comando, conforme QxCode espera\n        cmd = line.split()\n\n        if cmd[0] == \"end\":\n            break\n        elif cmd[0] == \"show\":\n            print(note)\n        elif cmd[0] == \"set_battery\":\n            note.set_battery(int(cmd[1]))\n        elif cmd[0] == \"rm_battery\":\n            note.rm_battery()\n        elif cmd[0] == \"set_charger\":\n            note.set_charger(int(cmd[1]))\n        elif cmd[0] == \"rm_charger\":\n            note.rm_charger()\n        elif cmd[0] == \"turn_on\":\n            note.turn_on()\n        elif cmd[0] == \"turn_off\":\n            note.turn_off()\n        elif cmd[0] == \"use\":\n            note.use(int(cmd[1]))\n        else:\n            print(\"fail: comando inv\u00e1lido\")\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "159"
        }
    ]
}