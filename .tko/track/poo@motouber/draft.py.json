{
    "patches": [
        {
            "label": "2025-10-27_19-53-05",
            "content": "@@ -1,5 +0,0 @@\n-class\n",
            "lines": "0"
        },
        {
            "label": "2025-10-27_21-23-54",
            "content": "@@ -2,812 +2,4 @@\n lass\n- Person:%0A    def __inint__(self, name: str, money: int):%0A        self.__name = name%0A        self.__money = money%0A%0A    def getName(self):%0A        return self.__name%0A%0A    def getMoney(self):%0A        return self.__money%0A%0A    def pay(self, value: int) -%3E int:%0A        if self.__money %3E= value:%0A            self.__money -= value%0A            return value%0A        paid = self.__money%0A        self.__money = 0%0A        return paid%0A%0A    def receive(self, value: int):%0A        self.__money += value%0A%0A    def __str__(self):%0A        return f%22%7Bself.__name%7D:%7Bself.__money%7D%22%0A%0Aclass Motorcycle:%0A    def __inint__(self):%0A        self.__cost = 0%0A        self.__drive = None%0A        self.__passenger = None%0A%0A    def setDrive(self, person: Person):%0A        self.__drive = person%0A%0A    def setPass(self, person: Person):%0A        if\n",
            "lines": "1"
        },
        {
            "label": "2025-10-27_21-37-52",
            "content": "@@ -810,205 +810,4 @@\n   if\n- self.__drive is None:%0A            print(%22fail: no driver%22)%0A            return%0A        self.__passenger = person%0A%0A    def drive(self, km: int):%0A        if self.__passenger is None:%0A                    \n",
            "lines": "36"
        },
        {
            "label": "2025-10-27_21-43-07",
            "content": "@@ -1003,418 +1003,12 @@\n     \n-print(%22fail: no passenger%22)%0A            return%0A        self.__cost += km%0A%0A    def leavePass(self):%0A        if self.__passenger is None:%0A            print(%22fail: no passenger to leave%22)%0A            return%0A        if self.__drive is None:%0A            print(%22fail: no driver%22)%0A            return%0A%0A        paid = self.__passenger.pay(self.__cost)%0A        if paid %3C self.__cost:%0A            print(%22fail: passenger doe%22)\n+        \n",
            "lines": "43"
        },
        {
            "label": "2025-10-27_21-56-53",
            "content": "@@ -1415,430 +1415,6 @@\n  doe\n-s not have enough money%22)%0A%0A            self.__drive.receive(self.__cost)%0A            print(f%22%7Bself.__passenger.getName()%7D:%7Bself.__passenger.getMoney()%7D left%22)%0A%0A            self.__cost = 0%0A            self.__passenger = None%0A%0A    def __str__(self):%0A        d = %22None%22 if self.__drive is None else str(self.__drive)%0A        p = %22None%22 if self.__passenger is None else str(self.__passenger)%0A        return f%22Cost: %7Bself.__cost%7D,\n %22\n+)\n",
            "lines": "57"
        },
        {
            "label": "2025-10-27_22-16-04",
            "content": "@@ -1840,1156 +1840,5 @@\n st%7D,\n- Driver: %7Bd%7D, Passenger: %7Bp%7D%22%0A%0Adef main():%0A    moto = Motorcycle()%0A    people = %7B%7D%0A%0A    while True:%0A        try:%0A            line = input().strinp()%0A            if not line:%0A                continue%0A            print(f%22$%7Bline%7D%22)%0A            parts = line.splint()%0A            cmd = parts%5B0%5D%0A%0A            if cmd == %22end%22:%0A                break%0A            elif cmd == %22show%22:%0A                print(moto)%0A            elif cmd == %22setDrive%22:%0A                name = parts%5B1%5D%0A                money = int(parts%5B2%5D)%0A                people%5Bname%5D = Person(name, money)%0A                moto.setDriver(people%5Bname%5D)%0A            elif cmd == %22setPass%22:%0A                name = parts%5B1%5D%0A                money = int(parts%5B2%5D)%0A                people%5Bname%5D = Person(name, money)%0A                moto.setPass(people%5Bname%5D)%0A            elif cmd == %22drive%22:%0A                km = int(parts%5B1%5D)%0A                moto.drive(km)%0A            elif cmd == %22drive%22:%0A                km = int(parts%5B1%5D)%0A                moto.drive(km)%0A            elif cmd == %22leavePass%22:%0A                moto.leavePass()%0A        except EOFError:%0A            break%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+%22\n",
            "lines": "68"
        },
        {
            "label": "2025-10-27_22-51-55",
            "content": "@@ -1980,16 +1980,17 @@\n t().stri\n+n\n p()%0A    \n",
            "lines": "109"
        },
        {
            "label": "2025-10-27_22-52-49",
            "content": "@@ -2090,19 +2090,20 @@\n = line.s\n-tri\n+plin\n t()%0A    \n",
            "lines": "109"
        },
        {
            "label": "2025-10-27_22-54-12",
            "content": "@@ -2089,25 +2089,25 @@\n  = line.stri\n-p\n+t\n ()%0A         \n",
            "lines": "109"
        },
        {
            "label": "2025-10-27_22-54-34",
            "content": "@@ -1,20 +1,20 @@\n class Pe\n-ssoa\n+rson\n :%0A    de\n@@ -12,32 +12,33 @@\n n:%0A    def __ini\n+n\n t__(self, nome: \n@@ -24,33 +24,33 @@\n _inint__(self, n\n-o\n+a\n me: str, dinheir\n@@ -38,32 +38,29 @@\n  name: str, \n-dinheiro\n+money\n : int):%0A    \n@@ -75,16 +75,16 @@\n .__n\n-o\n+a\n me = n\n-o\n+a\n me%0A \n@@ -101,27 +101,21 @@\n f.__\n-dinheiro = dinheiro\n+money = money\n %0A%0A  \n@@ -123,19 +123,18 @@\n  def get\n-_no\n+Na\n me(self)\n@@ -158,17 +158,17 @@\n self.__n\n-o\n+a\n me%0A%0A    \n@@ -174,25 +174,21 @@\n  def get\n-_dinheiro\n+Money\n (self):%0A\n@@ -209,24 +209,21 @@\n  self.__\n-dinheiro\n+money\n %0A%0A    de\n@@ -226,19 +226,17 @@\n   def pa\n-gar\n+y\n (self, v\n@@ -233,32 +233,39 @@\n ay(self, val\n-or\n+ue\n : int)\n+ -%3E int\n :%0A        if\n@@ -269,67 +269,30 @@\n  if \n-valor %3E self.__dinheiro:%0A            pago = self.__dinheiro\n+self.__money %3E= value:\n %0A   \n@@ -311,20 +311,22 @@\n f.__\n-dinheiro = 0\n+money -= value\n %0A   \n@@ -341,20 +341,21 @@\n  return \n-pago\n+value\n %0A       \n@@ -359,24 +359,36 @@\n     \n-else:%0A  \n+paid = self.__money%0A\n         \n   se\n@@ -387,39 +387,25 @@\n     \n-  \n self.__\n-dinheiro -= valor%0A    \n+money = 0%0A\n     \n@@ -415,21 +415,20 @@\n  return \n-valor\n+paid\n %0A%0A    de\n@@ -429,27 +429,27 @@\n     def rece\n-ber\n+ive\n (self, valor\n@@ -446,18 +446,18 @@\n elf, val\n-or\n+ue\n : int):%0A\n@@ -475,25 +475,22 @@\n f.__\n-dinheiro\n+money\n  += val\n-or\n+ue\n %0A%0A  \n@@ -536,17 +536,17 @@\n self.__n\n-o\n+a\n me%7D:%7Bsel\n@@ -553,21 +553,17 @@\n f.__\n-dinheiro\n+money\n %7D%22%0A%0A\n-%0A\n clas\n@@ -568,16 +568,22 @@\n ass Moto\n+rcycle\n :%0A    de\n@@ -589,16 +589,17 @@\n ef __ini\n+n\n t__(self\n@@ -613,28 +613,27 @@\n     self.__c\n-u\n+o\n st\n-o\n  = 0%0A       \n@@ -640,25 +640,21 @@\n  self.__\n-motorista\n+drive\n  = None%0A\n@@ -664,38 +664,37 @@\n      self.__pass\n-ageiro\n+enger\n  = None%0A%0A    def\n@@ -701,98 +701,66 @@\n  set\n-_d\n+D\n rive\n-r\n (self, \n-nome: str, dinheiro: int):%0A        self.__motorista = Pessoa(nome, dinheiro)\n+person: Person):%0A        self.__drive = person\n %0A%0A  \n@@ -768,18 +768,17 @@\n  def set\n-_p\n+P\n ass(self\n@@ -783,85 +783,147 @@\n lf, \n-nome: str, dinheiro: int):%0A        self.__passageiro = Pessoa(nome, dinheiro)\n+person: Person):%0A        if self.__drive is None:%0A            print(%22fail: no driver%22)%0A            return%0A        self.__passenger = person\n %0A%0A  \n@@ -940,25 +940,18 @@\n e(self, \n-distancia\n+km\n : int):%0A\n@@ -972,46 +972,17 @@\n f.__\n-motorista is None or self.__passageiro\n+passenger\n  is \n@@ -1016,25 +1016,10 @@\n il: \n-missing driver or\n+no\n  pas\n@@ -1066,25 +1066,17 @@\n .__c\n-u\n+o\n st\n-o\n  += \n-distancia\n+km\n %0A%0A  \n@@ -1082,26 +1082,25 @@\n    def leave\n-_p\n+P\n ass(self):%0A \n@@ -1120,22 +1120,21 @@\n f.__pass\n-ageiro\n+enger\n  is None\n@@ -1164,32 +1164,41 @@\n il: no passenger\n+ to leave\n %22)%0A            r\n@@ -1211,26 +1211,110 @@\n         \n-valor_pago\n+if self.__drive is None:%0A            print(%22fail: no driver%22)%0A            return%0A%0A        paid\n  = self.\n@@ -1323,20 +1323,17 @@\n pass\n-ageiro.pagar\n+enger.pay\n (sel\n@@ -1329,36 +1329,35 @@\n ger.pay(self.__c\n-u\n+o\n st\n-o\n )%0A        if val\n@@ -1353,26 +1353,20 @@\n      if \n-valor_pago\n+paid\n  %3C self.\n@@ -1368,20 +1368,19 @@\n self.__c\n-u\n+o\n st\n-o\n :%0A      \n@@ -1398,17 +1398,17 @@\n (%22fail: \n-P\n+p\n assenger\n@@ -1437,24 +1437,27 @@\n money%22)%0A\n+%0A  \n         \n self.__m\n@@ -1452,32 +1452,30 @@\n     \n+  \n self.__\n-motorista\n+drive\n .rece\n-ber\n+ive\n (sel\n@@ -1483,14 +1483,17 @@\n .__c\n-u\n+o\n st\n-o\n )%0A\n+    \n     \n@@ -1520,38 +1520,53 @@\n pass\n-ageiro\n+enger\n .get\n-_no\n+Na\n me()%7D:%7B\n-valor_pago\n+self.__passenger.getMoney()\n %7D le\n@@ -1570,16 +1570,21 @@\n  left%22)%0A\n+%0A    \n         \n@@ -1594,50 +1594,52 @@\n f.__\n-passageiro = None%0A        self.__custo = 0\n+cost = 0%0A            self.__passenger = None\n %0A%0A  \n@@ -1644,20 +1644,23 @@\n     def \n-show\n+__str__\n (self):%0A\n@@ -1672,148 +1672,138 @@\n    d\n-river_str = str(self.__motorista) if self.__motorista else %22None%22%0A        pass_str = str(self.__passageiro) if self.__passageiro else %22None%22\n+ = %22None%22 if self.__drive is None else str(self.__drive)%0A        p = %22None%22 if self.__passenger is None else str(self.__passenger)\n %0A   \n@@ -1807,22 +1807,23 @@\n         \n-print(\n+return \n f%22Cost: \n@@ -1835,12 +1835,11 @@\n .__c\n-u\n+o\n st\n-o\n %7D, D\n@@ -1851,17 +1851,8 @@\n : %7Bd\n-river_str\n %7D, P\n@@ -1867,19 +1867,10 @@\n : %7Bp\n-ass_str%7D%22)%0A\n+%7D%22\n %0A%0Ade\n@@ -1894,18 +1894,41 @@\n o = Moto\n-()\n+rcycle()%0A    people = %7B%7D%0A\n %0A    whi\n@@ -1979,47 +1979,14 @@\n ut()\n-%0A            parts = line.strip().split\n+.strip\n ()%0A \n@@ -2003,23 +2003,16 @@\n  if \n-len(parts) == 0\n+not line\n :%0A  \n@@ -2050,53 +2050,85 @@\n     \n-cmd = parts%5B0%5D%0A%0A            print(f%22$%7Bline%7D%22)\n+print(f%22$%7Bline%7D%22)%0A            parts = line.strip()%0A            cmd = parts%5B0%5D\n %0A%0A  \n@@ -2228,18 +2228,18 @@\n     \n-moto.show(\n+print(moto\n )%0A  \n@@ -2269,17 +2269,16 @@\n setDrive\n-r\n %22:%0A     \n@@ -2292,212 +2292,553 @@\n     \n-moto.set_driver(parts%5B1%5D, int(parts%5B2%5D))%0A            elif cmd == %22setPass%22:%0A                moto.set_pass(parts%5B1%5D, int(parts%5B2%5D))%0A            elif cmd == %22drive%22:%0A                moto.drive(int(parts%5B1%5D)\n+name = parts%5B1%5D%0A                money = int(parts%5B2%5D)%0A                people%5Bname%5D = Person(name, money)%0A                moto.setDriver(people%5Bname%5D)%0A            elif cmd == %22setPass%22:%0A                name = parts%5B1%5D%0A                money = int(parts%5B2%5D)%0A                people%5Bname%5D = Person(name, money)%0A                moto.setPass(people%5Bname%5D)%0A            elif cmd == %22drive%22:%0A                km = int(parts%5B1%5D)%0A                moto.drive(km)%0A            elif cmd == %22drive%22:%0A                km = int(parts%5B1%5D)%0A                moto.drive(km\n )%0A  \n@@ -2898,18 +2898,17 @@\n to.leave\n-_p\n+P\n ass()%0A  \n@@ -2949,17 +2949,16 @@\n  break%0A%0A\n-%0A\n if __nam\n",
            "lines": "109"
        },
        {
            "label": "2025-10-27_22-59-21",
            "content": "@@ -1280,17 +1280,16 @@\n  return%0A\n-%0A\n         \n@@ -1331,33 +1331,32 @@\n r(self.__custo)%0A\n-%0A\n         if valor\n@@ -1444,158 +1444,8 @@\n ey%22)\n-%0A%0A        print(f%22%7Bself.__passageiro.get_nome()%7D:%7Bself.__passageiro.get_dinheiro()%7D left%22)%0A%0A        # motorista sempre recebe o valor total da corrida\n %0A   \n@@ -1488,25 +1488,24 @@\n _custo)%0A\n-%0A\n         \n # reseta\n@@ -1500,25 +1500,66 @@\n     \n-# resetar corrida\n+print(f%22%7Bself.__passageiro.get_nome()%7D:%7Bvalor_pago%7D left%22)\n %0A   \n",
            "lines": "93"
        },
        {
            "label": "2025-10-27_23-02-32",
            "content": "class Pessoa:\n    def __init__(self, nome: str, dinheiro: int):\n        self.__nome = nome\n        self.__dinheiro = dinheiro\n\n    def get_nome(self):\n        return self.__nome\n\n    def get_dinheiro(self):\n        return self.__dinheiro\n\n    def pagar(self, valor: int):\n        if valor > self.__dinheiro:\n            pago = self.__dinheiro\n            self.__dinheiro = 0\n            return pago\n        else:\n            self.__dinheiro -= valor\n            return valor\n\n    def receber(self, valor: int):\n        self.__dinheiro += valor\n\n    def __str__(self):\n        return f\"{self.__nome}:{self.__dinheiro}\"\n\n\nclass Moto:\n    def __init__(self):\n        self.__custo = 0\n        self.__motorista = None\n        self.__passageiro = None\n\n    def set_driver(self, nome: str, dinheiro: int):\n        self.__motorista = Pessoa(nome, dinheiro)\n\n    def set_pass(self, nome: str, dinheiro: int):\n        self.__passageiro = Pessoa(nome, dinheiro)\n\n    def drive(self, distancia: int):\n        if self.__motorista is None or self.__passageiro is None:\n            print(\"fail: missing driver or passenger\")\n            return\n        self.__custo += distancia\n\n    def leave_pass(self):\n        if self.__passageiro is None:\n            print(\"fail: no passenger\")\n            return\n\n        valor_pago = self.__passageiro.pagar(self.__custo)\n\n        if valor_pago < self.__custo:\n            print(\"fail: Passenger does not have enough money\")\n\n        print(f\"{self.__passageiro.get_nome()}:{self.__passageiro.get_dinheiro()} left\")\n\n        # motorista sempre recebe o valor total da corrida\n        self.__motorista.receber(self.__custo)\n\n        # resetar corrida\n        self.__passageiro = None\n        self.__custo = 0\n\n    def show(self):\n        driver_str = str(self.__motorista) if self.__motorista else \"None\"\n        pass_str = str(self.__passageiro) if self.__passageiro else \"None\"\n        print(f\"Cost: {self.__custo}, Driver: {driver_str}, Passenger: {pass_str}\")\n\n\ndef main():\n    moto = Moto()\n    while True:\n        try:\n            line = input()\n            parts = line.strip().split()\n            if len(parts) == 0:\n                continue\n            cmd = parts[0]\n\n            print(f\"${line}\")\n\n            if cmd == \"end\":\n                break\n            elif cmd == \"show\":\n                moto.show()\n            elif cmd == \"setDriver\":\n                moto.set_driver(parts[1], int(parts[2]))\n            elif cmd == \"setPass\":\n                moto.set_pass(parts[1], int(parts[2]))\n            elif cmd == \"drive\":\n                moto.drive(int(parts[1]))\n            elif cmd == \"leavePass\":\n                moto.leave_pass()\n        except EOFError:\n            break\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "100"
        }
    ]
}